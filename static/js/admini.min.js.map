{
  "version": 3,
  "sources": ["../../node_modules/js-cookie/dist/js.cookie.mjs", "../../node_modules/@thednp/shorty/src/is/isHTMLElement.js", "../../node_modules/@thednp/shorty/src/misc/data.js", "../../node_modules/@thednp/shorty/src/misc/ObjectKeys.js", "../../node_modules/@thednp/shorty/src/is/isNode.js", "../../node_modules/@thednp/shorty/src/is/isWindow.js", "../../node_modules/@thednp/shorty/src/is/isDocument.js", "../../node_modules/@thednp/shorty/src/get/getDocument.js", "../../node_modules/@thednp/shorty/src/selectors/getElementsByTagName.js", "../../node_modules/@thednp/shorty/src/selectors/matches.js", "../../node_modules/@thednp/event-listener/src/event-listener.js", "../../node_modules/@thednp/shorty/src/strings/mouseclickEvent.js", "../../node_modules/@thednp/shorty/src/strings/transitionEndEvent.js", "../../node_modules/@thednp/shorty/src/strings/transitionDelay.js", "../../node_modules/@thednp/shorty/src/strings/transitionProperty.js", "../../node_modules/@thednp/shorty/src/get/getElementStyle.js", "../../node_modules/@thednp/shorty/src/get/getElementTransitionDelay.js", "../../node_modules/@thednp/shorty/src/strings/transitionDuration.js", "../../node_modules/@thednp/shorty/src/get/getElementTransitionDuration.js", "../../node_modules/@thednp/shorty/src/misc/dispatchEvent.js", "../../node_modules/@thednp/shorty/src/misc/emulateTransitionEnd.js", "../../node_modules/@thednp/shorty/src/selectors/querySelector.js", "../../node_modules/@thednp/shorty/src/selectors/closest.js", "../../node_modules/@thednp/shorty/src/misc/ObjectAssign.js", "../../node_modules/@thednp/shorty/src/class/hasClass.js", "../../node_modules/@thednp/shorty/src/class/removeClass.js", "../../node_modules/@thednp/shorty/src/is/isObject.js", "../../node_modules/@thednp/shorty/src/misc/OriginalEvent.js", "../../node_modules/bootstrap.native/src/strings/fadeClass.js", "../../node_modules/bootstrap.native/src/strings/showClass.js", "../../node_modules/bootstrap.native/src/strings/dataBsDismiss.js", "../../node_modules/bootstrap.native/src/strings/alertString.js", "../../node_modules/bootstrap.native/src/strings/alertComponent.js", "../../node_modules/@thednp/shorty/src/attr/getAttribute.js", "../../node_modules/@thednp/shorty/src/misc/normalizeValue.js", "../../node_modules/@thednp/shorty/src/misc/toLowerCase.js", "../../node_modules/@thednp/shorty/src/misc/normalizeOptions.js", "../../node_modules/bootstrap.native/src/version.js", "../../node_modules/bootstrap.native/src/components/base-component.js", "../../node_modules/bootstrap.native/src/components/alert-native.js", "../../node_modules/@thednp/shorty/src/strings/ariaPressed.js", "../../node_modules/@thednp/shorty/src/attr/setAttribute.js", "../../node_modules/@thednp/shorty/src/class/addClass.js", "../../node_modules/bootstrap.native/src/strings/activeClass.js", "../../node_modules/bootstrap.native/src/strings/dataBsToggle.js", "../../node_modules/bootstrap.native/src/strings/buttonString.js", "../../node_modules/bootstrap.native/src/strings/buttonComponent.js", "../../node_modules/bootstrap.native/src/components/button-native.js", "../../node_modules/@thednp/shorty/src/selectors/querySelectorAll.js", "../../node_modules/@thednp/shorty/src/strings/ariaExpanded.js", "../../node_modules/@thednp/shorty/src/misc/reflow.js", "../../node_modules/@thednp/shorty/src/misc/ObjectEntries.js", "../../node_modules/@thednp/shorty/src/misc/setElementStyle.js", "../../node_modules/@thednp/shorty/src/misc/timer.js", "../../node_modules/bootstrap.native/src/strings/collapsingClass.js", "../../node_modules/bootstrap.native/src/strings/collapseString.js", "../../node_modules/bootstrap.native/src/strings/collapseComponent.js", "../../node_modules/bootstrap.native/src/strings/dataBsTarget.js", "../../node_modules/bootstrap.native/src/strings/dataBsParent.js", "../../node_modules/bootstrap.native/src/strings/dataBsContainer.js", "../../node_modules/bootstrap.native/src/util/getTargetElement.js", "../../node_modules/bootstrap.native/src/components/collapse-native.js", "../../node_modules/@thednp/shorty/src/strings/focusEvent.js", "../../node_modules/@thednp/shorty/src/strings/keydownEvent.js", "../../node_modules/@thednp/shorty/src/strings/keyupEvent.js", "../../node_modules/@thednp/shorty/src/strings/scrollEvent.js", "../../node_modules/@thednp/shorty/src/strings/resizeEvent.js", "../../node_modules/@thednp/shorty/src/strings/keyArrowUp.js", "../../node_modules/@thednp/shorty/src/strings/keyArrowDown.js", "../../node_modules/@thednp/shorty/src/strings/keyEscape.js", "../../node_modules/@thednp/shorty/src/attr/hasAttribute.js", "../../node_modules/@thednp/shorty/src/selectors/getElementsByClassName.js", "../../node_modules/@thednp/shorty/src/misc/passiveHandler.js", "../../node_modules/@thednp/shorty/src/misc/focus.js", "../../node_modules/@thednp/shorty/src/get/getDocumentElement.js", "../../node_modules/@thednp/shorty/src/is/isRTL.js", "../../node_modules/@thednp/shorty/src/get/getBoundingClientRect.js", "../../node_modules/@thednp/shorty/src/get/getWindow.js", "../../node_modules/bootstrap.native/src/strings/dropdownClasses.js", "../../node_modules/bootstrap.native/src/strings/dropdownComponent.js", "../../node_modules/bootstrap.native/src/strings/dropdownMenuClass.js", "../../node_modules/bootstrap.native/src/util/isEmptyAnchor.js", "../../node_modules/bootstrap.native/src/components/dropdown-native.js", "../../node_modules/@thednp/shorty/src/strings/ariaHidden.js", "../../node_modules/@thednp/shorty/src/strings/ariaModal.js", "../../node_modules/@thednp/shorty/src/attr/removeAttribute.js", "../../node_modules/@thednp/shorty/src/get/getDocumentBody.js", "../../node_modules/bootstrap.native/src/strings/modalString.js", "../../node_modules/bootstrap.native/src/strings/modalComponent.js", "../../node_modules/@thednp/shorty/src/is/isShadowRoot.js", "../../node_modules/@thednp/shorty/src/get/getParentNode.js", "../../node_modules/@thednp/shorty/src/is/isTableElement.js", "../../node_modules/bootstrap.native/src/util/getElementContainer.js", "../../node_modules/bootstrap.native/src/strings/fixedTopClass.js", "../../node_modules/bootstrap.native/src/strings/fixedBottomClass.js", "../../node_modules/bootstrap.native/src/strings/stickyTopClass.js", "../../node_modules/bootstrap.native/src/strings/positionStickyClass.js", "../../node_modules/bootstrap.native/src/util/scrollbar.js", "../../node_modules/@thednp/shorty/src/misc/createElement.js", "../../node_modules/bootstrap.native/src/strings/offcanvasString.js", "../../node_modules/bootstrap.native/src/util/backdrop.js", "../../node_modules/bootstrap.native/src/util/isVisible.js", "../../node_modules/bootstrap.native/src/components/modal-native.js", "../../node_modules/bootstrap.native/src/strings/offcanvasComponent.js", "../../node_modules/bootstrap.native/src/components/offcanvas-native.js", "../../node_modules/bootstrap.native/src/strings/popoverString.js", "../../node_modules/bootstrap.native/src/strings/popoverComponent.js", "../../node_modules/bootstrap.native/src/strings/tooltipString.js", "../../node_modules/bootstrap.native/src/util/getTipTemplate.js", "../../node_modules/@thednp/shorty/src/is/isMedia.js", "../../node_modules/@thednp/shorty/src/get/getNodeScroll.js", "../../node_modules/@thednp/shorty/src/is/isScaledElement.js", "../../node_modules/@thednp/shorty/src/get/getRectRelativeToOffsetParent.js", "../../node_modules/bootstrap.native/src/util/tipClassPositions.js", "../../node_modules/bootstrap.native/src/util/styleTip.js", "../../node_modules/bootstrap.native/src/util/tooltipDefaults.js", "../../node_modules/@thednp/shorty/src/strings/ariaDescribedBy.js", "../../node_modules/@thednp/shorty/src/strings/mousedownEvent.js", "../../node_modules/@thednp/shorty/src/strings/mouseenterEvent.js", "../../node_modules/@thednp/shorty/src/strings/mouseleaveEvent.js", "../../node_modules/@thednp/shorty/src/strings/mousemoveEvent.js", "../../node_modules/@thednp/shorty/src/strings/focusinEvent.js", "../../node_modules/@thednp/shorty/src/strings/focusoutEvent.js", "../../node_modules/@thednp/shorty/src/strings/mousehoverEvent.js", "../../node_modules/@thednp/shorty/src/strings/touchstartEvent.js", "../../node_modules/@thednp/shorty/src/get/getUID.js", "../../node_modules/@thednp/shorty/src/is/isFunction.js", "../../node_modules/@thednp/shorty/src/strings/userAgentData.js", "../../node_modules/@thednp/shorty/src/strings/userAgent.js", "../../node_modules/@thednp/shorty/src/boolean/isApple.js", "../../node_modules/bootstrap.native/src/strings/dataOriginalTitle.js", "../../node_modules/bootstrap.native/src/strings/tooltipComponent.js", "../../node_modules/@thednp/shorty/src/is/isNodeList.js", "../../node_modules/@thednp/shorty/src/is/isString.js", "../../node_modules/@thednp/shorty/src/is/isArray.js", "../../node_modules/bootstrap.native/src/util/setHtml.js", "../../node_modules/bootstrap.native/src/util/createTip.js", "../../node_modules/bootstrap.native/src/util/isVisibleTip.js", "../../node_modules/bootstrap.native/src/components/tooltip-native.js", "../../node_modules/bootstrap.native/src/components/popover-native.js", "../../node_modules/bootstrap.native/src/strings/scrollspyString.js", "../../node_modules/bootstrap.native/src/strings/scrollspyComponent.js", "../../node_modules/bootstrap.native/src/components/scrollspy-native.js", "../../node_modules/@thednp/shorty/src/strings/ariaSelected.js", "../../node_modules/bootstrap.native/src/strings/tabString.js", "../../node_modules/bootstrap.native/src/strings/tabComponent.js", "../../src/js/custom-tab.js", "../../node_modules/bootstrap.native/src/strings/toastString.js", "../../node_modules/bootstrap.native/src/strings/toastComponent.js", "../../node_modules/bootstrap.native/src/components/toast-native.js", "../../src/js/custom-bsn.js", "../../node_modules/bs-companion/src/BsTabs.js", "../../node_modules/bs-companion/src/utils/normalizeData.js", "../../node_modules/bs-companion/src/BsToggle.js", "../../node_modules/bs-companion/src/ResponsiveTable.js", "../../node_modules/bs-companion/src/toaster.js", "../../node_modules/bs-companion/src/Toasts.js", "../../node_modules/bs-companion/src/modalizer.js", "../../node_modules/bs-companion/src/modalizerConfirm.js", "../../node_modules/bs-companion/src/FormValidator.js", "../../node_modules/bs-companion/bs-companion.js", "../../node_modules/modular-behaviour.js/utils/normalizeData.js", "../../node_modules/modular-behaviour.js/utils/globalValue.js", "../../node_modules/modular-behaviour.js/utils/isConstructable.js", "../../node_modules/modular-behaviour.js/modular-behaviour.js", "../../src/js/utils/debounce.js", "../../src/js/ui.js", "../../src/js/utils/escape-html.js", "../../src/js/index.js"],
  "sourcesContent": ["/*! js-cookie v3.0.1 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      key + '=' + converter.write(value, key) + stringifiedAttributes)\n  }\n\n  function get (key) {\n    if (typeof document === 'undefined' || (arguments.length && !key)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar\n  }\n\n  return Object.create(\n    {\n      set: set,\n      get: get,\n      remove: function (key, attributes) {\n        set(\n          key,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport default api;\n", "/**\n * Checks if an element is an `HTMLElement`.\n * @see https://dom.spec.whatwg.org/#node\n *\n * @param {any} element the target object\n * @returns {boolean} the query result\n */\nconst isHTMLElement = (element) => (element && element.nodeType === 1) || false;\nexport default isHTMLElement;\n", "import isHTMLElement from '../is/isHTMLElement';\n\n/** @type {Map<string, Map<HTMLElement, Record<string, any>>>} */\nconst componentData = new Map();\n/**\n * An interface for web components background data.\n * @see https://github.com/thednp/bootstrap.native/blob/master/src/components/base-component.js\n */\nconst Data = {\n  /**\n   * Sets web components data.\n   * @param {HTMLElement} element target element\n   * @param {string} component the component's name or a unique key\n   * @param {Record<string, any>} instance the component instance\n   */\n  set: (element, component, instance) => {\n    if (!isHTMLElement(element)) return;\n\n    /* istanbul ignore else */\n    if (!componentData.has(component)) {\n      componentData.set(component, new Map());\n    }\n\n    const instanceMap = componentData.get(component);\n    // not undefined, but defined right above\n    instanceMap.set(element, instance);\n  },\n\n  /**\n   * Returns all instances for specified component.\n   * @param {string} component the component's name or a unique key\n   * @returns {Map<HTMLElement, Record<string, any>>?} all the component instances\n   */\n  getAllFor: (component) => {\n    const instanceMap = componentData.get(component);\n\n    return instanceMap || null;\n  },\n\n  /**\n   * Returns the instance associated with the target.\n   * @param {HTMLElement} element target element\n   * @param {string} component the component's name or a unique key\n   * @returns {Record<string, any>?} the instance\n   */\n  get: (element, component) => {\n    if (!isHTMLElement(element) || !component) return null;\n    const allForC = Data.getAllFor(component);\n    const instance = element && allForC && allForC.get(element);\n\n    return instance || null;\n  },\n\n  /**\n   * Removes web components data.\n   * @param {HTMLElement} element target element\n   * @param {string} component the component's name or a unique key\n   */\n  remove: (element, component) => {\n    const instanceMap = componentData.get(component);\n    if (!instanceMap || !isHTMLElement(element)) return;\n\n    instanceMap.delete(element);\n\n    /* istanbul ignore else */\n    if (instanceMap.size === 0) {\n      componentData.delete(component);\n    }\n  },\n};\n\n/**\n * An alias for `Data.get()`.\n * @type {SHORTY.getInstance<any>}\n */\nexport const getInstance = (target, component) => Data.get(target, component);\n\nexport default Data;\n", "/**\n * Shortcut for `Object.keys()` static method.\n * @param  {Record<string, any>} obj a target object\n * @returns {string[]}\n */\nconst ObjectKeys = (obj) => Object.keys(obj);\nexport default ObjectKeys;\n", "/**\n * Checks if an object is a `Node`.\n *\n * @param {any} node the target object\n * @returns {boolean} the query result\n */\nconst isNode = (element) => (element && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n  .some((x) => +element.nodeType === x)) || false;\nexport default isNode;\n", "/**\n * Check if a target object is `Window`.\n * => equivalent to `object instanceof Window`\n *\n * @param {any} object the target object\n * @returns {boolean} the query result\n */\nconst isWindow = (object) => (object && object.constructor.name === 'Window') || false;\nexport default isWindow;\n", "/**\n * Checks if an object is a `Document`.\n * @see https://dom.spec.whatwg.org/#node\n *\n * @param {any} object the target object\n * @returns {boolean} the query result\n */\nconst isDocument = (object) => (object && object.nodeType === 9) || false;\n\nexport default isDocument;\n", "import isNode from '../is/isNode';\nimport isWindow from '../is/isWindow';\nimport isDocument from '../is/isDocument';\n\n/**\n * Returns the `document` or the `#document` element.\n * @see https://github.com/floating-ui/floating-ui\n * @param {(Node | Window)=} node\n * @returns {Document}\n */\nexport default function getDocument(node) {\n  // node instanceof Document\n  if (isDocument(node)) return node;\n  // node instanceof Node\n  if (isNode(node)) return node.ownerDocument;\n  // node instanceof Window\n  if (isWindow(node)) return node.document;\n  // node is undefined | NULL\n  return window.document;\n}\n", "import getDocument from '../get/getDocument';\nimport isNode from '../is/isNode';\n\n/**\n * Shortcut for `HTMLElement.getElementsByTagName` method. Some `Node` elements\n * like `ShadowRoot` do not support `getElementsByTagName`.\n *\n * @param {string} selector the tag name\n * @param {ParentNode=} parent optional Element to look into\n * @return {HTMLCollectionOf<HTMLElement>} the 'HTMLCollection'\n */\nexport default function getElementsByTagName(selector, parent) {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return lookUp.getElementsByTagName(selector);\n}\n", "/**\n * Check if element matches a CSS selector.\n *\n * @param {HTMLElement} target\n * @param {string} selector\n * @returns {boolean}\n */\nexport default function matches(target, selector) {\n  return target.matches(selector);\n}\n", "/** @type {Record<string, any>} */\nconst EventRegistry = {};\n\nexport { EventRegistry };\n\n/**\n * The global event listener.\n *\n * @type {EventListener}\n * @this {EventTarget}\n */\nexport function globalListener(e) {\n  const that = this;\n  const { type } = e;\n\n  [...EventRegistry[type]].forEach((elementsMap) => {\n    const [element, listenersMap] = elementsMap;\n    /* istanbul ignore else */\n    if (element === that) {\n      [...listenersMap].forEach((listenerMap) => {\n        const [listener, options] = listenerMap;\n        listener.apply(element, [e]);\n\n        if (options && options.once) {\n          removeListener(element, type, listener, options);\n        }\n      });\n    }\n  });\n}\n\n/**\n * Register a new listener with its options and attach the `globalListener`\n * to the target if this is the first listener.\n *\n * @type {Listener.ListenerAction<EventTarget>}\n */\nexport const addListener = (element, eventType, listener, options) => {\n  // get element listeners first\n  if (!EventRegistry[eventType]) {\n    EventRegistry[eventType] = new Map();\n  }\n  const oneEventMap = EventRegistry[eventType];\n\n  if (!oneEventMap.has(element)) {\n    oneEventMap.set(element, new Map());\n  }\n  const oneElementMap = oneEventMap.get(element);\n\n  // get listeners size\n  const { size } = oneElementMap;\n\n  // register listener with its options\n  oneElementMap.set(listener, options);\n\n  // add listener last\n  if (!size) {\n    element.addEventListener(eventType, globalListener, options);\n  }\n};\n\n/**\n * Remove a listener from registry and detach the `globalListener`\n * if no listeners are found in the registry.\n *\n * @type {Listener.ListenerAction<EventTarget>}\n */\nexport const removeListener = (element, eventType, listener, options) => {\n  // get listener first\n  const oneEventMap = EventRegistry[eventType];\n  const oneElementMap = oneEventMap && oneEventMap.get(element);\n  const savedOptions = oneElementMap && oneElementMap.get(listener);\n\n  // also recover initial options\n  const { options: eventOptions } = savedOptions !== undefined\n    ? savedOptions\n    : { options };\n\n  // unsubscribe second, remove from registry\n  if (oneElementMap && oneElementMap.has(listener)) oneElementMap.delete(listener);\n  if (oneEventMap && (!oneElementMap || !oneElementMap.size)) oneEventMap.delete(element);\n  if (!oneEventMap || !oneEventMap.size) delete EventRegistry[eventType];\n\n  // remove listener last\n  /* istanbul ignore else */\n  if (!oneElementMap || !oneElementMap.size) {\n    element.removeEventListener(eventType, globalListener, eventOptions);\n  }\n};\n\n/**\n * Advanced event listener based on subscribe / publish pattern.\n * @see https://www.patterns.dev/posts/classic-design-patterns/#observerpatternjavascript\n * @see https://gist.github.com/shystruk/d16c0ee7ac7d194da9644e5d740c8338#file-subpub-js\n * @see https://hackernoon.com/do-you-still-register-window-event-listeners-in-each-component-react-in-example-31a4b1f6f1c8\n */\nconst Listener = {\n  on: addListener,\n  off: removeListener,\n  globalListener,\n  registry: EventRegistry,\n};\n\nexport default Listener;\n", "/**\n * A global namespace for `click` event.\n * @type {string}\n */\nconst mouseclickEvent = 'click';\nexport default mouseclickEvent;\n", "/**\n * A global namespace for 'transitionend' string.\n * @type {string}\n */\nconst transitionEndEvent = 'transitionend';\nexport default transitionEndEvent;\n", "/**\n * A global namespace for 'transitionDelay' string.\n * @type {string}\n */\nconst transitionDelay = 'transitionDelay';\nexport default transitionDelay;\n", "/**\n * A global namespace for `transitionProperty` string for modern browsers.\n *\n * @type {string}\n */\nconst transitionProperty = 'transitionProperty';\nexport default transitionProperty;\n", "/**\n * Shortcut for `window.getComputedStyle(element).propertyName`\n * static method.\n *\n * * If `element` parameter is not an `HTMLElement`, `getComputedStyle`\n * throws a `ReferenceError`.\n *\n * @param {HTMLElement} element target\n * @param {string} property the css property\n * @return {string} the css property value\n */\nexport default function getElementStyle(element, property) {\n  const computedStyle = getComputedStyle(element);\n\n  // must use camelcase strings,\n  // or non-camelcase strings with `getPropertyValue`\n  return property.includes('--')\n    ? computedStyle.getPropertyValue(property)\n    : computedStyle[property];\n}\n", "import transitionDelay from '../strings/transitionDelay';\nimport transitionProperty from '../strings/transitionProperty';\nimport getElementStyle from './getElementStyle';\n\n/**\n * Utility to get the computed `transitionDelay`\n * from Element in miliseconds.\n *\n * @param {HTMLElement} element target\n * @return {number} the value in miliseconds\n */\nexport default function getElementTransitionDelay(element) {\n  const propertyValue = getElementStyle(element, transitionProperty);\n  const delayValue = getElementStyle(element, transitionDelay);\n  const delayScale = delayValue.includes('ms') ? /* istanbul ignore next */1 : 1000;\n  const duration = propertyValue && propertyValue !== 'none'\n    ? parseFloat(delayValue) * delayScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */0;\n}\n", "/**\n * A global namespace for 'transitionDuration' string.\n * @type {string}\n */\nconst transitionDuration = 'transitionDuration';\nexport default transitionDuration;\n", "import transitionDuration from '../strings/transitionDuration';\nimport transitionProperty from '../strings/transitionProperty';\nimport getElementStyle from './getElementStyle';\n\n/**\n * Utility to get the computed `transitionDuration`\n * from Element in miliseconds.\n *\n * @param {HTMLElement} element target\n * @return {number} the value in miliseconds\n */\nexport default function getElementTransitionDuration(element) {\n  const propertyValue = getElementStyle(element, transitionProperty);\n  const durationValue = getElementStyle(element, transitionDuration);\n  const durationScale = durationValue.includes('ms') ? /* istanbul ignore next */1 : 1000;\n  const duration = propertyValue && propertyValue !== 'none'\n    ? parseFloat(durationValue) * durationScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */0;\n}\n", "/**\n * Shortcut for the `Element.dispatchEvent(Event)` method.\n *\n * @param {HTMLElement} element is the target\n * @param {Event} event is the `Event` object\n */\nconst dispatchEvent = (element, event) => element.dispatchEvent(event);\nexport default dispatchEvent;\n", "import transitionEndEvent from '../strings/transitionEndEvent';\nimport getElementTransitionDelay from '../get/getElementTransitionDelay';\nimport getElementTransitionDuration from '../get/getElementTransitionDuration';\nimport dispatchEvent from './dispatchEvent';\n\n/**\n * Utility to make sure callbacks are consistently\n * called when transition ends.\n *\n * @param {HTMLElement} element target\n * @param {EventListener} handler `transitionend` callback\n */\nexport default function emulateTransitionEnd(element, handler) {\n  let called = 0;\n  const endEvent = new Event(transitionEndEvent);\n  const duration = getElementTransitionDuration(element);\n  const delay = getElementTransitionDelay(element);\n\n  if (duration) {\n    /**\n     * Wrap the handler in on -> off callback\n     * @type {EventListener} e Event object\n     */\n    const transitionEndWrapper = (e) => {\n      /* istanbul ignore else */\n      if (e.target === element) {\n        handler.apply(element, [e]);\n        element.removeEventListener(transitionEndEvent, transitionEndWrapper);\n        called = 1;\n      }\n    };\n    element.addEventListener(transitionEndEvent, transitionEndWrapper);\n    setTimeout(() => {\n      /* istanbul ignore next */\n      if (!called) dispatchEvent(element, endEvent);\n    }, duration + delay + 17);\n  } else {\n    handler.apply(element, [endEvent]);\n  }\n}\n", "import getDocument from '../get/getDocument';\nimport isNode from '../is/isNode';\n\n/**\n * Utility to check if target is typeof `HTMLElement`, `Element`, `Node`\n * or find one that matches a selector.\n *\n * @param {Node | string} selector the input selector or target element\n * @param {ParentNode=} parent optional node to look into\n * @return {HTMLElement?} the `HTMLElement` or `querySelector` result\n */\nexport default function querySelector(selector, parent) {\n  if (isNode(selector)) {\n    return selector;\n  }\n  const lookUp = isNode(parent) ? parent : getDocument();\n\n  return lookUp.querySelector(selector);\n}\n", "/**\n * Shortcut for `HTMLElement.closest` method which also works\n * with children of `ShadowRoot`. The order of the parameters\n * is intentional since they're both required.\n *\n * @see https://stackoverflow.com/q/54520554/803358\n *\n * @param {HTMLElement} element Element to look into\n * @param {string} selector the selector name\n * @return {HTMLElement?} the query result\n */\nexport default function closest(element, selector) {\n  return element ? (element.closest(selector)\n    // break out of `ShadowRoot`\n    || closest(element.getRootNode().host, selector)) : null;\n}\n", "/**\n * Shortcut for `Object.assign()` static method.\n * @param  {Record<string, any>} obj a target object\n * @param  {Record<string, any>} source a source object\n */\nconst ObjectAssign = (obj, source) => Object.assign(obj, source);\nexport default ObjectAssign;\n", "/**\n * Check class in `HTMLElement.classList`.\n *\n * @param {HTMLElement} element target\n * @param {string} classNAME to check\n * @returns {boolean}\n */\nexport default function hasClass(element, classNAME) {\n  return element.classList.contains(classNAME);\n}\n", "/**\n * Remove class from `HTMLElement.classList`.\n *\n * @param {HTMLElement} element target\n * @param {string} classNAME to remove\n * @returns {void}\n */\nexport default function removeClass(element, classNAME) {\n  element.classList.remove(classNAME);\n}\n", "/**\n * Checks if an object is an `Object`.\n *\n * @param {any} obj the target object\n * @returns {boolean} the query result\n */\nconst isObject = (obj) => (typeof obj === 'object') || false;\nexport default isObject;\n", "import isObject from '../is/isObject';\nimport ObjectAssign from './ObjectAssign';\n\n/**\n * Returns a namespaced `CustomEvent` specific to each component.\n * @param {string} EventType Event.type\n * @param {Record<string, any>=} config Event.options | Event.properties\n * @returns {SHORTY.OriginalEvent} a new namespaced event\n */\nexport default function OriginalEvent(EventType, config) {\n  const OriginalCustomEvent = new CustomEvent(EventType, {\n    cancelable: true, bubbles: true,\n  });\n\n  /* istanbul ignore else */\n  if (isObject(config)) {\n    ObjectAssign(OriginalCustomEvent, config);\n  }\n  return OriginalCustomEvent;\n}\n", "/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n", "/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n", "/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n", "/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n", "/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n", "/**\n * Shortcut for `HTMLElement.getAttribute()` method.\n * @param {HTMLElement} element target element\n * @param {string} attribute attribute name\n * @returns {string?} attribute value\n */\nconst getAttribute = (element, attribute) => element.getAttribute(attribute);\n\nexport default getAttribute;\n", "/**\n * The raw value or a given component option.\n *\n * @typedef {string | HTMLElement | Function | number | boolean | null} niceValue\n */\n\n/**\n * Utility to normalize component options\n *\n * @param {any} value the input value\n * @return {niceValue} the normalized value\n */\nexport default function normalizeValue(value) {\n  if (['true', true].includes(value)) { // boolean\n  // if ('true' === value) { // boolean\n    return true;\n  }\n\n  if (['false', false].includes(value)) { // boolean\n  // if ('false' === value) { // boolean\n    return false;\n  }\n\n  if (value === '' || value === 'null') { // null\n    return null;\n  }\n\n  if (value !== '' && !Number.isNaN(+value)) { // number\n    return +value;\n  }\n\n  // string / function / HTMLElement / object\n  return value;\n}\n", "/**\n * Shortcut for `String.toLowerCase()`.\n *\n * @param {string} source input string\n * @returns {string} lowercase output string\n */\nconst toLowerCase = (source) => source.toLowerCase();\nexport default toLowerCase;\n", "import getAttribute from '../attr/getAttribute';\nimport normalizeValue from './normalizeValue';\nimport ObjectKeys from './ObjectKeys';\nimport toLowerCase from './toLowerCase';\n\n/**\n * Utility to normalize component options.\n *\n * @param {HTMLElement} element target\n * @param {Record<string, any>} defaultOps component default options\n * @param {Record<string, any>} inputOps component instance options\n * @param {string=} ns component namespace\n * @return {Record<string, any>} normalized component options object\n */\nexport default function normalizeOptions(element, defaultOps, inputOps, ns) {\n  const data = { ...element.dataset };\n  /** @type {Record<string, any>} */\n  const normalOps = {};\n  /** @type {Record<string, any>} */\n  const dataOps = {};\n  const title = 'title';\n\n  ObjectKeys(data).forEach((k) => {\n    const key = ns && k.includes(ns)\n      ? k.replace(ns, '').replace(/[A-Z]/, (match) => toLowerCase(match))\n      : k;\n\n    dataOps[key] = normalizeValue(data[k]);\n  });\n\n  ObjectKeys(inputOps).forEach((k) => {\n    inputOps[k] = normalizeValue(inputOps[k]);\n  });\n\n  ObjectKeys(defaultOps).forEach((k) => {\n    /* istanbul ignore else */\n    if (k in inputOps) {\n      normalOps[k] = inputOps[k];\n    } else if (k in dataOps) {\n      normalOps[k] = dataOps[k];\n    } else {\n      normalOps[k] = k === title\n        ? getAttribute(element, title)\n        : defaultOps[k];\n    }\n  });\n\n  return normalOps;\n}\n", "import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n", "/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\n\nimport querySelector from '@thednp/shorty/src/selectors/querySelector';\nimport normalizeOptions from '@thednp/shorty/src/misc/normalizeOptions';\nimport Data from '@thednp/shorty/src/misc/data';\nimport ObjectKeys from '@thednp/shorty/src/misc/ObjectKeys';\n\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  /**\n   * @param {HTMLElement | string} target `Element` or selector string\n   * @param {BSN.ComponentOptions=} config component instance options\n   */\n  constructor(target, config) {\n    const self = this;\n    const element = querySelector(target);\n\n    if (!element) {\n      throw Error(`${self.name} Error: \"${target}\" is not a valid selector.`);\n    }\n\n    /** @static @type {BSN.ComponentOptions} */\n    self.options = {};\n\n    const prevInstance = Data.get(element, self.name);\n    if (prevInstance) prevInstance.dispose();\n\n    /** @type {HTMLElement} */\n    self.element = element;\n\n    /* istanbul ignore else */\n    if (self.defaults && ObjectKeys(self.defaults).length) {\n      self.options = normalizeOptions(element, self.defaults, (config || {}), 'bs');\n    }\n\n    Data.set(element, self.name, self);\n  }\n\n  /* eslint-disable */\n  /* istanbul ignore next */\n  /** @static */\n  get version() { return Version; }\n\n  /* eslint-enable */\n  /* istanbul ignore next */\n  /** @static */\n  get name() { return this.constructor.name; }\n\n  /* istanbul ignore next */\n  /** @static */\n  get defaults() { return this.constructor.defaults; }\n\n  /**\n   * Removes component from target element;\n   */\n  dispose() {\n    const self = this;\n    Data.remove(self.element, self.name);\n    ObjectKeys(self).forEach((prop) => { self[prop] = null; });\n  }\n}\n", "/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport mouseclickEvent from '@thednp/shorty/src/strings/mouseclickEvent';\nimport emulateTransitionEnd from '@thednp/shorty/src/misc/emulateTransitionEnd';\nimport querySelector from '@thednp/shorty/src/selectors/querySelector';\nimport closest from '@thednp/shorty/src/selectors/closest';\nimport ObjectAssign from '@thednp/shorty/src/misc/ObjectAssign';\nimport hasClass from '@thednp/shorty/src/class/hasClass';\nimport removeClass from '@thednp/shorty/src/class/removeClass';\nimport dispatchEvent from '@thednp/shorty/src/misc/dispatchEvent';\nimport { getInstance } from '@thednp/shorty/src/misc/data';\nimport OriginalEvent from '@thednp/shorty/src/misc/OriginalEvent';\nimport { addListener, removeListener } from '@thednp/event-listener/src/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Alert>}\n */\nconst getAlertInstance = (element) => getInstance(element, alertComponent);\n\n/**\n* An `Alert` initialization callback.\n* @type {BSN.InitCallback<Alert>}\n*/\nconst alertInitCallback = (element) => new Alert(element);\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = OriginalEvent(`close.bs.${alertString}`);\nconst closedAlertEvent = OriginalEvent(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n * @param {Alert} self target Alert instance\n */\nfunction alertTransitionEnd(self) {\n  const { element } = self;\n  toggleAlertHandler(self);\n\n  dispatchEvent(element, closedAlertEvent);\n\n  self.dispose();\n  element.remove();\n}\n\n// ALERT PRIVATE METHOD\n// ====================\n/**\n * Toggle on / off the `click` event listener.\n * @param {Alert} self the target alert instance\n * @param {boolean=} add when `true`, event listener is added\n */\nfunction toggleAlertHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  const { dismiss } = self;\n  /* istanbul ignore else */\n  if (dismiss) action(dismiss, mouseclickEvent, self.close);\n}\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  /** @param {HTMLElement | string} target element or selector */\n  constructor(target) {\n    super(target);\n    // bind\n    const self = this;\n\n    // initialization element\n    const { element } = self;\n\n    // the dismiss button\n    /** @static @type {HTMLElement?} */\n    self.dismiss = querySelector(alertDismissSelector, element);\n\n    // add event listener\n    toggleAlertHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return alertComponent; }\n  /* eslint-enable */\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   *\n   * @param {Event=} e most likely the `click` event\n   * @this {Alert} the `Alert` instance or `EventTarget`\n   */\n  close(e) {\n    const self = e ? getAlertInstance(closest(this, alertSelector)) : this;\n    const { element } = self;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n      if (closeAlertEvent.defaultPrevented) return;\n\n      removeClass(element, showClass);\n\n      if (hasClass(element, fadeClass)) {\n        emulateTransitionEnd(element, () => alertTransitionEnd(self));\n      } else alertTransitionEnd(self);\n    }\n  }\n\n  /** Remove the component from target element. */\n  dispose() {\n    toggleAlertHandler(this);\n    super.dispose();\n  }\n}\n\nObjectAssign(Alert, {\n  selector: alertSelector,\n  init: alertInitCallback,\n  getInstance: getAlertInstance,\n});\n", "/**\n * A global namespace for aria-pressed.\n * @type {string}\n */\nconst ariaPressed = 'aria-pressed';\nexport default ariaPressed;\n", "/**\n * Shortcut for `HTMLElement.setAttribute()` method.\n * @param  {HTMLElement} element target element\n * @param  {string} attribute attribute name\n * @param  {string} value attribute value\n * @returns {void}\n */\nconst setAttribute = (element, attribute, value) => element.setAttribute(attribute, value);\n\nexport default setAttribute;\n", "/**\n * Add class to `HTMLElement.classList`.\n *\n * @param {HTMLElement} element target\n * @param {string} classNAME to add\n * @returns {void}\n */\nexport default function addClass(element, classNAME) {\n  element.classList.add(classNAME);\n}\n", "/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n", "/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n", "/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n", "/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n", "/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport ariaPressed from '@thednp/shorty/src/strings/ariaPressed';\nimport mouseclickEvent from '@thednp/shorty/src/strings/mouseclickEvent';\nimport setAttribute from '@thednp/shorty/src/attr/setAttribute';\nimport ObjectAssign from '@thednp/shorty/src/misc/ObjectAssign';\nimport addClass from '@thednp/shorty/src/class/addClass';\nimport hasClass from '@thednp/shorty/src/class/hasClass';\nimport removeClass from '@thednp/shorty/src/class/removeClass';\nimport { getInstance } from '@thednp/shorty/src/misc/data';\n\nimport { addListener, removeListener } from '@thednp/event-listener/src/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Button>}\n */\nconst getButtonInstance = (element) => getInstance(element, buttonComponent);\n\n/**\n * A `Button` initialization callback.\n * @type {BSN.InitCallback<Button>}\n */\nconst buttonInitCallback = (element) => new Button(element);\n\n// BUTTON PRIVATE METHOD\n// =====================\n/**\n * Toggles on/off the `click` event listener.\n * @param {Button} self the `Button` instance\n * @param {boolean=} add when `true`, event listener is added\n */\nfunction toggleButtonHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, self.toggle);\n}\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target usually a `.btn` element\n   */\n  constructor(target) {\n    super(target);\n    const self = this;\n\n    // initialization element\n    const { element } = self;\n\n    // set initial state\n    /** @type {boolean} */\n    self.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, `${!!self.isActive}`);\n\n    // add event listener\n    toggleButtonHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return buttonComponent; }\n  /* eslint-enable */\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   * @param {MouseEvent} e usually `click` Event object\n   */\n  toggle(e) {\n    if (e) e.preventDefault();\n    const self = e ? getButtonInstance(this) : this;\n    if (!self.element) return;\n    const { element, isActive } = self;\n\n    if (hasClass(element, 'disabled')) return;\n\n    const action = isActive ? removeClass : addClass;\n    action(element, activeClass);\n    setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n    self.isActive = hasClass(element, activeClass);\n  }\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    toggleButtonHandler(this);\n    super.dispose();\n  }\n}\n\nObjectAssign(Button, {\n  selector: buttonSelector,\n  init: buttonInitCallback,\n  getInstance: getButtonInstance,\n});\n", "import getDocument from '../get/getDocument';\nimport isNode from '../is/isNode';\n\n/**\n * A shortcut for `(document|Element).querySelectorAll`.\n *\n * @param {string} selector the input selector\n * @param {ParentNode=} parent optional node to look into\n * @return {NodeListOf<HTMLElement>} the query result\n */\nexport default function querySelectorAll(selector, parent) {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return lookUp.querySelectorAll(selector);\n}\n", "/**\n * A global namespace for aria-expanded.\n * @type {string}\n */\nconst ariaExpanded = 'aria-expanded';\nexport default ariaExpanded;\n", "/**\n * Utility to force re-paint of an `HTMLElement` target.\n *\n * @param {HTMLElement} element is the target\n * @return {number} the `Element.offsetHeight` value\n */\nconst reflow = (element) => element.offsetHeight;\nexport default reflow;\n", "/**\n * Shortcut for `Object.entries()` static method.\n * @param  {Record<string, any>} obj a target object\n * @returns {[string, any][]}\n */\nconst ObjectEntries = (obj) => Object.entries(obj);\nexport default ObjectEntries;\n", "import ObjectAssign from './ObjectAssign';\nimport ObjectEntries from './ObjectEntries';\n\n/**\n * Shortcut for multiple uses of `HTMLElement.style.propertyName` method.\n * @param  {HTMLElement} element target element\n * @param  {Partial<CSSStyleDeclaration>} styles attribute value\n */\nconst setElementStyle = (element, styles) => {\n  ObjectEntries(styles).forEach(([key, value]) => {\n    if (key.includes('--')) {\n      element.style.setProperty(key, value);\n    } else {\n      const propObject = {}; propObject[key] = value;\n      ObjectAssign(element.style, propObject);\n    }\n  });\n};\nexport default setElementStyle;\n", "import isHTMLElement from '../is/isHTMLElement';\n\n/** @type {Map<HTMLElement, any>} */\nconst TimeCache = new Map();\n/**\n * An interface for one or more `TimerHandler`s per `Element`.\n * @see https://github.com/thednp/navbar.js/\n */\nconst Timer = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   * @param {HTMLElement} element target element\n   * @param {ReturnType<TimerHandler>} callback the callback\n   * @param {number} delay the execution delay\n   * @param {string=} key a unique key\n   */\n  set: (element, callback, delay, key) => {\n    if (!isHTMLElement(element)) return;\n\n    /* istanbul ignore else */\n    if (key && key.length) {\n      /* istanbul ignore else */\n      if (!TimeCache.has(element)) {\n        TimeCache.set(element, new Map());\n      }\n      const keyTimers = TimeCache.get(element);\n      keyTimers.set(key, setTimeout(callback, delay));\n    } else {\n      TimeCache.set(element, setTimeout(callback, delay));\n    }\n  },\n\n  /**\n   * Returns the timer associated with the target.\n   * @param {HTMLElement} element target element\n   * @param {string=} key a unique\n   * @returns {number?} the timer\n   */\n  get: (element, key) => {\n    if (!isHTMLElement(element)) return null;\n    const keyTimers = TimeCache.get(element);\n\n    if (key && key.length && keyTimers && keyTimers.get) {\n      return keyTimers.get(key) || /* istanbul ignore next */null;\n    }\n    return keyTimers || null;\n  },\n\n  /**\n   * Clears the element's timer.\n   * @param {HTMLElement} element target element\n   * @param {string=} key a unique key\n   */\n  clear: (element, key) => {\n    if (!isHTMLElement(element)) return;\n\n    if (key && key.length) {\n      const keyTimers = TimeCache.get(element);\n      /* istanbul ignore else */\n      if (keyTimers && keyTimers.get) {\n        clearTimeout(keyTimers.get(key));\n        keyTimers.delete(key);\n        /* istanbul ignore else */\n        if (keyTimers.size === 0) {\n          TimeCache.delete(element);\n        }\n      }\n    } else {\n      clearTimeout(TimeCache.get(element));\n      TimeCache.delete(element);\n    }\n  },\n};\n\nexport default Timer;\n", "/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n", "/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n", "/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n", "/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n", "/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n", "/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n", "import getDocument from '@thednp/shorty/src/get/getDocument';\nimport querySelector from '@thednp/shorty/src/selectors/querySelector';\nimport closest from '@thednp/shorty/src/selectors/closest';\nimport getAttribute from '@thednp/shorty/src/attr/getAttribute';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param {HTMLElement} element the target element\n * @returns {HTMLElement?} the query result\n */\nexport default function getTargetElement(element) {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr.map((att) => {\n    const attValue = getAttribute(element, att);\n    if (attValue) {\n      return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n    }\n    return null;\n  }).filter((x) => x)[0];\n}\n", "/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport setAttribute from '@thednp/shorty/src/attr/setAttribute';\nimport getDocument from '@thednp/shorty/src/get/getDocument';\nimport closest from '@thednp/shorty/src/selectors/closest';\nimport querySelector from '@thednp/shorty/src/selectors/querySelector';\nimport querySelectorAll from '@thednp/shorty/src/selectors/querySelectorAll';\nimport addClass from '@thednp/shorty/src/class/addClass';\nimport hasClass from '@thednp/shorty/src/class/hasClass';\nimport removeClass from '@thednp/shorty/src/class/removeClass';\nimport mouseclickEvent from '@thednp/shorty/src/strings/mouseclickEvent';\nimport ariaExpanded from '@thednp/shorty/src/strings/ariaExpanded';\nimport emulateTransitionEnd from '@thednp/shorty/src/misc/emulateTransitionEnd';\nimport reflow from '@thednp/shorty/src/misc/reflow';\nimport ObjectAssign from '@thednp/shorty/src/misc/ObjectAssign';\nimport dispatchEvent from '@thednp/shorty/src/misc/dispatchEvent';\nimport setElementStyle from '@thednp/shorty/src/misc/setElementStyle';\nimport { getInstance } from '@thednp/shorty/src/misc/data';\nimport Timer from '@thednp/shorty/src/misc/timer';\nimport OriginalEvent from '@thednp/shorty/src/misc/OriginalEvent';\n\nimport { addListener, removeListener } from '@thednp/event-listener/src/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Collapse>}\n */\nconst getCollapseInstance = (element) => getInstance(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n * @type {BSN.InitCallback<Collapse>}\n */\nconst collapseInitCallback = (element) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = OriginalEvent(`show.bs.${collapseString}`);\nconst shownCollapseEvent = OriginalEvent(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = OriginalEvent(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = OriginalEvent(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n * @param {Collapse} self the `Collapse` instance\n */\nfunction expandCollapse(self) {\n  const {\n    element, parent, triggers,\n  } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (showCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, () => {}, 17);\n  if (parent) Timer.set(parent, () => {}, 17);\n\n  addClass(element, collapsingClass);\n  removeClass(element, collapseString);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach((btn) => setAttribute(btn, ariaExpanded, 'true'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n    addClass(element, showClass);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, shownCollapseEvent);\n  });\n}\n\n/**\n * Collapse the designated `Element`.\n * @param {Collapse} self the `Collapse` instance\n */\nfunction collapseContent(self) {\n  const {\n    element, parent, triggers,\n  } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (hideCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, () => {}, 17);\n  if (parent) Timer.set(parent, () => {}, 17);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  removeClass(element, collapseString);\n  removeClass(element, showClass);\n  addClass(element, collapsingClass);\n\n  reflow(element);\n  setElementStyle(element, { height: '0px' });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    /* istanbul ignore else */\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach((btn) => setAttribute(btn, ariaExpanded, 'false'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, hiddenCollapseEvent);\n  });\n}\n\n/**\n * Toggles on/off the event listener(s) of the `Collapse` instance.\n * @param {Collapse} self the `Collapse` instance\n * @param {boolean=} add when `true`, the event listener is added\n */\nfunction toggleCollapseHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach((btn) => action(btn, mouseclickEvent, collapseClickHandler));\n  }\n}\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n * @param {MouseEvent} e the `Event` object\n */\nfunction collapseClickHandler(e) {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n}\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target and `Element` that matches the selector\n   * @param {BSN.Options.Collapse=} config instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    // bind\n    const self = this;\n\n    // initialization element\n    const { element, options } = self;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    /** @type {HTMLElement[]} */\n    self.triggers = [...querySelectorAll(collapseToggleSelector, doc)]\n      .filter((btn) => getTargetElement(btn) === element);\n\n    // set parent accordion\n    /** @type {HTMLElement?} */\n    self.parent = querySelector(options.parent, doc)\n      || getTargetElement(element) || null;\n\n    // add event listeners\n    toggleCollapseHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return collapseComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return collapseDefaults; }\n  /* eslint-enable */\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    const self = this;\n    if (!hasClass(self.element, showClass)) self.show();\n    else self.hide();\n  }\n\n  /** Hides the collapse. */\n  hide() {\n    const self = this;\n    const { triggers, element } = self;\n    if (Timer.get(element)) return;\n\n    collapseContent(self);\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach((btn) => addClass(btn, `${collapseString}d`));\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const self = this;\n    const {\n      element, parent, triggers,\n    } = self;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)]\n        .find((i) => getCollapseInstance(i));\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach((btn) => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(self);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach((btn) => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    const self = this;\n    toggleCollapseHandler(self);\n\n    super.dispose();\n  }\n}\n\nObjectAssign(Collapse, {\n  selector: collapseSelector,\n  init: collapseInitCallback,\n  getInstance: getCollapseInstance,\n});\n", "/**\n * A global namespace for `focus` event.\n * @type {string}\n */\nconst focusEvent = 'focus';\nexport default focusEvent;\n", "/**\n * A global namespace for `keydown` event.\n * @type {string}\n */\nconst keydownEvent = 'keydown';\nexport default keydownEvent;\n", "/**\n * A global namespace for `keyup` event.\n * @type {string}\n */\nconst keyupEvent = 'keyup';\nexport default keyupEvent;\n", "/**\n * A global namespace for `scroll` event.\n * @type {string}\n */\nconst scrollEvent = 'scroll';\nexport default scrollEvent;\n", "/**\n * A global namespace for `resize` event.\n * @type {string}\n */\nconst resizeEvent = 'resize';\nexport default resizeEvent;\n", "/**\n * A global namespace for `ArrowUp` key.\n * @type {string} e.which = 38 equivalent\n */\nconst keyArrowUp = 'ArrowUp';\n\nexport default keyArrowUp;\n", "/**\n * A global namespace for `ArrowDown` key.\n * @type {string} e.which = 40 equivalent\n */\nconst keyArrowDown = 'ArrowDown';\n\nexport default keyArrowDown;\n", "/**\n * A global namespace for `Escape` key.\n * @type {string} e.which = 27 equivalent\n */\nconst keyEscape = 'Escape';\n\nexport default keyEscape;\n", "/**\n * Shortcut for `HTMLElement.hasAttribute()` method.\n * @param  {HTMLElement} element target element\n * @param  {string} attribute attribute name\n * @returns {boolean} the query result\n */\nconst hasAttribute = (element, attribute) => element.hasAttribute(attribute);\n\nexport default hasAttribute;\n", "import getDocument from '../get/getDocument';\nimport isNode from '../is/isNode';\n\n/**\n * Shortcut for `HTMLElement.getElementsByClassName` method. Some `Node` elements\n * like `ShadowRoot` do not support `getElementsByClassName`.\n *\n * @param {string} selector the class name\n * @param {ParentNode=} parent optional Element to look into\n * @return {HTMLCollectionOf<HTMLElement>} the 'HTMLCollection'\n */\nexport default function getElementsByClassName(selector, parent) {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return lookUp.getElementsByClassName(selector);\n}\n", "/**\n * A global namespace for most scroll event listeners.\n * @type {Partial<AddEventListenerOptions>}\n */\nconst passiveHandler = { passive: true };\n\nexport default passiveHandler;\n", "/**\n * Utility to focus an `HTMLElement` target.\n *\n * @param {HTMLElement} element is the target\n */\nconst focus = (element) => element.focus();\nexport default focus;\n", "import getDocument from './getDocument';\n\n/**\n * Returns the `document.documentElement` or the `<html>` element.\n *\n * @param {(Node | Window)=} node\n * @returns {HTMLHtmlElement}\n */\nexport default function getDocumentElement(node) {\n  return getDocument(node).documentElement;\n}\n", "import getDocumentElement from '../get/getDocumentElement';\n\n/**\n * Checks if a page is Right To Left.\n * @param {HTMLElement=} node the target\n * @returns {boolean} the query result\n */\nconst isRTL = (node) => getDocumentElement(node).dir === 'rtl';\nexport default isRTL;\n", "import isHTMLElement from '../is/isHTMLElement';\n\n/**\n * Returns the bounding client rect of a target `HTMLElement`.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement} element event.target\n * @param {boolean=} includeScale when *true*, the target scale is also computed\n * @returns {SHORTY.BoundingClientRect} the bounding client rect object\n */\nexport default function getBoundingClientRect(element, includeScale) {\n  const {\n    width, height, top, right, bottom, left,\n  } = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    const { offsetWidth, offsetHeight } = element;\n    scaleX = offsetWidth > 0 ? Math.round(width) / offsetWidth\n      : /* istanbul ignore next */1;\n    scaleY = offsetHeight > 0 ? Math.round(height) / offsetHeight\n      : /* istanbul ignore next */1;\n  }\n\n  return {\n    width: width / scaleX,\n    height: height / scaleY,\n    top: top / scaleY,\n    right: right / scaleX,\n    bottom: bottom / scaleY,\n    left: left / scaleX,\n    x: left / scaleX,\n    y: top / scaleY,\n  };\n}\n", "import isDocument from '../is/isDocument';\nimport isNode from '../is/isNode';\n\n/**\n * Returns the `Window` object of a target node.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {(Node | Window)=} node target node\n * @returns {Window} the `Window` object\n */\nexport default function getWindow(node) {\n  // node is undefined | NULL\n  if (!node) return window;\n  // node instanceof Document\n  if (isDocument(node)) return node.defaultView;\n  // node instanceof Node\n  if (isNode(node)) return node.ownerDocument.defaultView;\n  // node is instanceof Window\n  return node;\n}\n", "/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n", "/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n", "/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n", "import hasAttribute from '@thednp/shorty/src/attr/hasAttribute';\nimport closest from '@thednp/shorty/src/selectors/closest';\nimport isHTMLElement from '@thednp/shorty/src/is/isHTMLElement';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param {Node} element the target element\n * @returns {boolean} the query result\n */\nexport default function isEmptyAnchor(element) {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return isHTMLElement(element)\n    // anchor href starts with #\n    && ((hasAttribute(element, 'href') && element.href.slice(-1) === '#')\n    // OR a child of an anchor with href starts with #\n    || (parentAnchor && hasAttribute(parentAnchor, 'href')\n    && parentAnchor.href.slice(-1) === '#'));\n}\n", "/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport ariaExpanded from '@thednp/shorty/src/strings/ariaExpanded';\nimport focusEvent from '@thednp/shorty/src/strings/focusEvent';\nimport keydownEvent from '@thednp/shorty/src/strings/keydownEvent';\nimport keyupEvent from '@thednp/shorty/src/strings/keyupEvent';\nimport scrollEvent from '@thednp/shorty/src/strings/scrollEvent';\nimport resizeEvent from '@thednp/shorty/src/strings/resizeEvent';\nimport mouseclickEvent from '@thednp/shorty/src/strings/mouseclickEvent';\nimport keyArrowUp from '@thednp/shorty/src/strings/keyArrowUp';\nimport keyArrowDown from '@thednp/shorty/src/strings/keyArrowDown';\nimport keyEscape from '@thednp/shorty/src/strings/keyEscape';\nimport setAttribute from '@thednp/shorty/src/attr/setAttribute';\nimport hasAttribute from '@thednp/shorty/src/attr/hasAttribute';\nimport closest from '@thednp/shorty/src/selectors/closest';\nimport querySelector from '@thednp/shorty/src/selectors/querySelector';\nimport getElementsByClassName from '@thednp/shorty/src/selectors/getElementsByClassName';\nimport passiveHandler from '@thednp/shorty/src/misc/passiveHandler';\nimport ObjectAssign from '@thednp/shorty/src/misc/ObjectAssign';\nimport { getInstance } from '@thednp/shorty/src/misc/data';\nimport setElementStyle from '@thednp/shorty/src/misc/setElementStyle';\nimport dispatchEvent from '@thednp/shorty/src/misc/dispatchEvent';\nimport focus from '@thednp/shorty/src/misc/focus';\nimport OriginalEvent from '@thednp/shorty/src/misc/OriginalEvent';\nimport addClass from '@thednp/shorty/src/class/addClass';\nimport hasClass from '@thednp/shorty/src/class/hasClass';\nimport removeClass from '@thednp/shorty/src/class/removeClass';\nimport isRTL from '@thednp/shorty/src/is/isRTL';\nimport getElementStyle from '@thednp/shorty/src/get/getElementStyle';\nimport getDocumentElement from '@thednp/shorty/src/get/getDocumentElement';\nimport getBoundingClientRect from '@thednp/shorty/src/get/getBoundingClientRect';\nimport getDocument from '@thednp/shorty/src/get/getDocument';\nimport getWindow from '@thednp/shorty/src/get/getWindow';\n\nimport { addListener, removeListener } from '@thednp/event-listener/src/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [\n  dropdownString,\n  dropupString,\n  dropstartString,\n  dropendString,\n] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Dropdown>}\n */\nconst getDropdownInstance = (element) => getInstance(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n * @type {BSN.InitCallback<Dropdown>}\n */\nconst dropdownInitCallback = (element) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = OriginalEvent(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = OriginalEvent(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = OriginalEvent(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = OriginalEvent(`hidden.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nfunction styleDropdown(self) {\n  const {\n    element, menu, parentElement, options,\n  } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore next: this test requires a navbar */\n  if (getElementStyle(menu, 'position') === 'static') return;\n\n  const RTL = isRTL(element);\n  // const menuStart = hasClass(menu, dropdownMenuStartClass);\n  const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n  // reset menu offset and position\n  const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n  resetProps.forEach((p) => { menu.style[p] = ''; });\n\n  // set initial position class\n  // take into account .btn-group parent as .dropdown\n  // this requires navbar/btn-group/input-group\n  let positionClass = dropdownClasses.find((c) => hasClass(parentElement, c))\n    || /* istanbul ignore next: fallback position */ dropdownString;\n\n  /** @type {Record<string, Record<string, any>>} */\n  let dropdownMargin = {\n    dropdown: [offset, 0, 0],\n    dropup: [0, 0, offset],\n    dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n    dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n  };\n\n  /** @type {Record<string, Record<string, any>>} */\n  const dropdownPosition = {\n    dropdown: { top: '100%' },\n    dropup: { top: 'auto', bottom: '100%' },\n    dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n    dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n    menuStart: RTL ? { right: 0, left: 'auto' } : { right: 'auto', left: 0 },\n    menuEnd: RTL ? { right: 'auto', left: 0 } : { right: 0, left: 'auto' },\n  };\n\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const {\n    left: targetLeft, top: targetTop,\n    width: targetWidth, height: targetHeight,\n  } = getBoundingClientRect(element);\n\n  // dropstart | dropend\n  const leftFullExceed = targetLeft - menuWidth - offset < 0;\n  // dropend\n  const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n  // dropstart | dropend\n  const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n  // dropdown\n  const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n  // dropup\n  const topExceed = targetTop - menuHeight - offset < 0;\n  // dropdown / dropup\n  const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd))\n    && targetLeft + targetWidth - menuWidth < 0;\n  const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd))\n    && targetLeft + menuWidth >= clientWidth;\n\n  // recompute position\n  // handle RTL as well\n  if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropendString;\n  }\n  if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropstartString;\n  }\n  if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n    positionClass = dropupString;\n  }\n\n  // override position for horizontal classes\n  if (horizontalClass.includes(positionClass) && bottomExceed) {\n    ObjectAssign(dropdownPosition[positionClass], {\n      top: 'auto', bottom: 0,\n    });\n  }\n\n  // override position for vertical classes\n  if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n    // don't realign when menu is wider than window\n    // in both RTL and non-RTL readability is KING\n    let posAjust;\n    if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n    if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n    if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n  }\n\n  dropdownMargin = dropdownMargin[positionClass];\n  setElementStyle(menu, {\n    ...dropdownPosition[positionClass],\n    margin: `${dropdownMargin.map((x) => (x ? `${x}px` : x)).join(' ')}`,\n  });\n\n  // override dropdown-menu-start | dropdown-menu-end\n  if (verticalClass.includes(positionClass) && menuEnd) {\n    /* istanbul ignore else */\n    if (menuEnd) {\n      const endAdjust = (!RTL && leftExceed) || (RTL && rightExceed)\n        ? 'menuStart' : /* istanbul ignore next */'menuEnd';\n      setElementStyle(menu, dropdownPosition[endAdjust]);\n    }\n  }\n}\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n * @param {HTMLElement} menu\n * @returns {HTMLElement[]}\n */\nfunction getMenuItems(menu) {\n  return [...menu.children].map((c) => {\n    if (c && menuFocusTags.includes(c.tagName)) return c;\n    const { firstElementChild } = c;\n    if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n      return firstElementChild;\n    }\n    return null;\n  }).filter((c) => c);\n}\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nfunction toggleDropdownDismiss(self) {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach((ev) => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n}\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param {Dropdown} self the `Dropdown` instance\n * @param {boolean=} add when `true`, it will add the event listener\n */\nfunction toggleDropdownHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler);\n}\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param {(Node | Window)=} element target\n * @returns {HTMLElement?} the query result\n */\nfunction getCurrentOpenDropdown(element) {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map((c) => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find((x) => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...currentParent[0].children]\n      .find((x) => hasAttribute(x, dataBsToggle));\n  }\n  return null;\n}\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param {MouseEvent} e event object\n * @this {Document}\n */\nfunction dropdownDismissHandler(e) {\n  const { target, type } = e;\n\n  /* istanbul ignore next: impossible to satisfy */\n  if (!target || !target.closest) return; // some weird FF bug #409\n\n  const element = getCurrentOpenDropdown(target);\n  const self = getDropdownInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const hasData = closest(target, dropdownSelector) !== null;\n  const isForm = parentElement && parentElement.contains(target)\n    && (target.tagName === 'form' || closest(target, 'form') !== null);\n\n  if (type === mouseclickEvent && isEmptyAnchor(target)) {\n    e.preventDefault();\n  }\n  if (type === focusEvent\n    && (target === element || target === menu || menu.contains(target))) {\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (isForm || hasData) {\n    // smile to ESLint\n  } else if (self) {\n    self.hide();\n  }\n}\n\n/**\n * Handles `click` event listener for `Dropdown`.\n * @this {HTMLElement}\n * @param {MouseEvent} e event object\n */\nfunction dropdownClickHandler(e) {\n  const element = this;\n  const { target } = e;\n  const self = getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.toggle();\n    /* istanbul ignore else */\n    if (target && isEmptyAnchor(target)) e.preventDefault();\n  }\n}\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n * @param {KeyboardEvent} e event object\n */\nfunction dropdownPreventScroll(e) {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n}\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n * @param {KeyboardEvent} e keyboard key\n * @this {Document}\n */\nfunction dropdownKeyHandler(e) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = element && getDocument(element);\n  /* istanbul ignore next: impossible to satisfy */\n  if (!self || !activeElement) return;\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n    let idx = menuItems.indexOf(activeElement);\n    /* istanbul ignore else */\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    /* istanbul ignore else */\n    if (menuItems[idx]) focus(menuItems[idx]);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n/**\n * @this {globalThis}\n * @returns {void}\n */\nfunction dropdownLayoutHandler() {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target Element or string selector\n   * @param {BSN.Options.Dropdown=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    // bind\n    const self = this;\n\n    // initialization element\n    const { element } = self;\n    const { parentElement } = element;\n\n    // set targets\n    /** @type {(Element | HTMLElement)} */\n    self.parentElement = parentElement;\n    /** @type {(Element | HTMLElement)} */\n    self.menu = querySelector(`.${dropdownMenuClass}`, parentElement);\n\n    // set initial state to closed\n    /** @type {boolean} */\n    self.open = false;\n\n    // add event listener\n    toggleDropdownHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return dropdownComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return dropdownDefaults; }\n  /* eslint-enable */\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    const self = this;\n\n    if (self.open) self.hide();\n    else self.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const self = this;\n    const {\n      element, open, menu, parentElement,\n    } = self;\n\n    /* istanbul ignore next */\n    if (open) return;\n\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement && getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent].forEach((e) => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, showDropdownEvent);\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'true');\n\n    // change menu position\n    styleDropdown(self);\n\n    self.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(self);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const self = this;\n    const {\n      element, open, menu, parentElement,\n    } = self;\n\n    /* istanbul ignore next */\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach((e) => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, hideDropdownEvent);\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'false');\n\n    self.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(self);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    const self = this;\n    if (self.open) self.hide();\n\n    toggleDropdownHandler(self);\n\n    super.dispose();\n  }\n}\n\nObjectAssign(Dropdown, {\n  selector: dropdownSelector,\n  init: dropdownInitCallback,\n  getInstance: getDropdownInstance,\n});\n", "/**\n * A global namespace for aria-hidden.\n * @type {string}\n */\nconst ariaHidden = 'aria-hidden';\nexport default ariaHidden;\n", "/**\n * A global namespace for aria-modal.\n * @type {string}\n */\nconst ariaModal = 'aria-modal';\nexport default ariaModal;\n", "/**\n * Shortcut for `HTMLElement.removeAttribute()` method.\n * @param  {HTMLElement} element target element\n * @param  {string} attribute attribute name\n * @returns {void}\n */\nconst removeAttribute = (element, attribute) => element.removeAttribute(attribute);\n\nexport default removeAttribute;\n", "import getDocument from './getDocument';\n/**\n * Returns the `document.body` or the `<body>` element.\n *\n * @param {(Node | Window)=} node\n * @returns {HTMLBodyElement}\n */\nexport default function getDocumentBody(node) {\n  return getDocument(node).body;\n}\n", "/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n", "/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n", "/**\n * Check if target is a `ShadowRoot`.\n *\n * @param {any} element target\n * @returns {boolean} the query result\n */\nconst isShadowRoot = (element) => (element && element.constructor.name === 'ShadowRoot')\n  || false;\nexport default isShadowRoot;\n", "import getDocumentElement from './getDocumentElement';\nimport isShadowRoot from '../is/isShadowRoot';\n\n/**\n * Returns the `parentNode` also going through `ShadowRoot`.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {Node} node the target node\n * @returns {Node} the apropriate parent node\n */\nexport default function getParentNode(node) {\n  if (node.nodeName === 'HTML') {\n    return node;\n  }\n\n  // this is a quicker (but less type safe) way to save quite some bytes from the bundle\n  return (\n    node.assignedSlot // step into the shadow DOM of the parent of a slotted node\n    || node.parentNode // DOM Element detected\n    || (isShadowRoot(node) && node.host) // ShadowRoot detected\n    || getDocumentElement(node) // fallback\n  );\n}\n", "/**\n * Check if a target element is a `<table>`, `<td>` or `<th>`.\n * This specific check is important for determining\n * the `offsetParent` of a given element.\n *\n * @param {any} element the target element\n * @returns {boolean} the query result\n */\nconst isTableElement = (element) => (element && ['TABLE', 'TD', 'TH'].includes(element.tagName))\n  || false;\nexport default isTableElement;\n", "import getParentNode from '@thednp/shorty/src/get/getParentNode';\nimport getElementStyle from '@thednp/shorty/src/get/getElementStyle';\nimport isTableElement from '@thednp/shorty/src/is/isTableElement';\nimport isShadowRoot from '@thednp/shorty/src/is/isShadowRoot';\nimport isHTMLElement from '@thednp/shorty/src/is/isHTMLElement';\nimport getWindow from '@thednp/shorty/src/get/getWindow';\nimport getDocumentBody from '@thednp/shorty/src/get/getDocumentBody';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * When `getOffset` is *true*, it returns the `offsetParent` for tooltip/popover\n * offsets computation similar to **floating-ui**.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement} element the target\n * @param {boolean=} getOffset when *true* it will return an `offsetParent`\n * @returns {ParentNode | Window} the query result\n */\nexport default function getElementContainer(element, getOffset) {\n  const majorBlockTags = ['HTML', 'BODY'];\n\n  if (getOffset) {\n    /** @type {any} */\n    let { offsetParent } = element;\n    const win = getWindow(element);\n\n    while (offsetParent && (isTableElement(offsetParent)\n      || (isHTMLElement(offsetParent)\n        // we must count for both fixed & sticky\n        && !['sticky', 'fixed'].includes(getElementStyle(offsetParent, 'position'))))) {\n      offsetParent = offsetParent.offsetParent;\n    }\n\n    if (!offsetParent || (majorBlockTags.includes(offsetParent.tagName)\n        || getElementStyle(offsetParent, 'position') === 'static')) {\n      offsetParent = win;\n    }\n    return offsetParent;\n  }\n\n  /** @type {ParentNode[]} */\n  const containers = [];\n  /** @type {ParentNode} */\n  let { parentNode } = element;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode);\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || !!parentNode.shadowRoot\n      || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return containers.find((c, i) => {\n    if (getElementStyle(c, 'position') !== 'relative'\n      && containers.slice(i + 1).every((r) => getElementStyle(r, 'position') === 'static')) {\n      return c;\n    }\n    return null;\n  }) || getDocumentBody(element);\n}\n", "/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n", "/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n", "/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n", "/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n", "import getElementsByClassName from '@thednp/shorty/src/selectors/getElementsByClassName';\nimport setElementStyle from '@thednp/shorty/src/misc/setElementStyle';\nimport hasClass from '@thednp/shorty/src/class/hasClass';\nimport getDocumentBody from '@thednp/shorty/src/get/getDocumentBody';\nimport getElementStyle from '@thednp/shorty/src/get/getElementStyle';\nimport getDocumentElement from '@thednp/shorty/src/get/getDocumentElement';\nimport getWindow from '@thednp/shorty/src/get/getWindow';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\n/** @param {(HTMLElement | Document)=} parent */\nconst getFixedItems = (parent) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n * @param {HTMLElement=} element the target modal/offcanvas\n */\nexport function resetScrollbar(element) {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach((fixed) => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n}\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n * @param {HTMLElement=} element\n * @returns {number} the value\n */\nexport function measureScrollbar(element) {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n}\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param {HTMLElement} element the target modal/offcanvas\n * @param {boolean=} overflow body does overflow or not\n */\nexport function setScrollbar(element, overflow) {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach((fixed) => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some((c) => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n}\n", "import getDocument from '../get/getDocument';\nimport ObjectAssign from './ObjectAssign';\n\n/**\n * This is a shortie for `document.createElement` method\n * which allows you to create a new `HTMLElement` for a given `tagName`\n * or based on an object with specific non-readonly attributes:\n * `id`, `className`, `textContent`, `style`, etc.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement\n *\n * @param {Record<string, string> | string} param `tagName` or object\n * @return {HTMLElement} a new `HTMLElement` or `Element`\n */\nexport default function createElement(param) {\n  if (!param) return null;\n\n  if (typeof param === 'string') {\n    return getDocument().createElement(param);\n  }\n\n  const { tagName } = param;\n  const attr = { ...param };\n  const newElement = createElement(tagName);\n  delete attr.tagName;\n  ObjectAssign(newElement, attr);\n  return newElement;\n}\n", "/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n", "import querySelector from '@thednp/shorty/src/selectors/querySelector';\nimport addClass from '@thednp/shorty/src/class/addClass';\nimport hasClass from '@thednp/shorty/src/class/hasClass';\nimport removeClass from '@thednp/shorty/src/class/removeClass';\nimport reflow from '@thednp/shorty/src/misc/reflow';\nimport getDocument from '@thednp/shorty/src/get/getDocument';\nimport createElement from '@thednp/shorty/src/misc/createElement';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div');\n\n/**\n * Returns the current active modal / offcancas element.\n * @param {HTMLElement=} element the context element\n * @returns {HTMLElement?} the requested element\n */\nfunction getCurrentOpen(element) {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n}\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n * @param {boolean=} isModal\n */\nfunction toggleOverlayType(isModal) {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach((c) => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n}\n\n/**\n * Append the overlay to DOM.\n * @param {HTMLElement} container\n * @param {boolean} hasFade\n * @param {boolean=} isModal\n */\nfunction appendOverlay(container, hasFade, isModal) {\n  toggleOverlayType(isModal);\n  container.append(overlay);\n  if (hasFade) addClass(overlay, fadeClass);\n}\n\n/**\n * Shows the overlay to the user.\n */\nfunction showOverlay() {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n}\n\n/**\n * Hides the overlay from the user.\n */\nfunction hideOverlay() {\n  removeClass(overlay, showClass);\n}\n\n/**\n * Removes the overlay from DOM.\n * @param {HTMLElement=} element\n */\nfunction removeOverlay(element) {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    overlay.remove();\n    resetScrollbar(element);\n  }\n}\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n", "import isHTMLElement from '@thednp/shorty/src/is/isHTMLElement';\nimport getElementStyle from '@thednp/shorty/src/get/getElementStyle';\n\n/**\n * @param {HTMLElement} element target\n * @returns {boolean}\n */\nexport default function isVisible(element) {\n  return isHTMLElement(element)\n    && getElementStyle(element, 'visibility') !== 'hidden'\n    && element.offsetParent !== null;\n}\n", "/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport keyEscape from '@thednp/shorty/src/strings/keyEscape';\nimport ariaHidden from '@thednp/shorty/src/strings/ariaHidden';\nimport ariaModal from '@thednp/shorty/src/strings/ariaModal';\nimport resizeEvent from '@thednp/shorty/src/strings/resizeEvent';\nimport mouseclickEvent from '@thednp/shorty/src/strings/mouseclickEvent';\nimport keydownEvent from '@thednp/shorty/src/strings/keydownEvent';\nimport setAttribute from '@thednp/shorty/src/attr/setAttribute';\nimport removeAttribute from '@thednp/shorty/src/attr/removeAttribute';\nimport getElementTransitionDuration from '@thednp/shorty/src/get/getElementTransitionDuration';\nimport getWindow from '@thednp/shorty/src/get/getWindow';\nimport getDocument from '@thednp/shorty/src/get/getDocument';\nimport getDocumentBody from '@thednp/shorty/src/get/getDocumentBody';\nimport getDocumentElement from '@thednp/shorty/src/get/getDocumentElement';\nimport querySelector from '@thednp/shorty/src/selectors/querySelector';\nimport querySelectorAll from '@thednp/shorty/src/selectors/querySelectorAll';\nimport closest from '@thednp/shorty/src/selectors/closest';\nimport addClass from '@thednp/shorty/src/class/addClass';\nimport hasClass from '@thednp/shorty/src/class/hasClass';\nimport removeClass from '@thednp/shorty/src/class/removeClass';\nimport isRTL from '@thednp/shorty/src/is/isRTL';\nimport { getInstance } from '@thednp/shorty/src/misc/data';\nimport Timer from '@thednp/shorty/src/misc/timer';\nimport focus from '@thednp/shorty/src/misc/focus';\nimport ObjectAssign from '@thednp/shorty/src/misc/ObjectAssign';\nimport dispatchEvent from '@thednp/shorty/src/misc/dispatchEvent';\nimport passiveHandler from '@thednp/shorty/src/misc/passiveHandler';\nimport emulateTransitionEnd from '@thednp/shorty/src/misc/emulateTransitionEnd';\nimport OriginalEvent from '@thednp/shorty/src/misc/OriginalEvent';\nimport setElementStyle from '@thednp/shorty/src/misc/setElementStyle';\n\nimport { addListener, removeListener } from '@thednp/event-listener/src/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\n\nimport getElementContainer from '../util/getElementContainer';\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true, // boolean|string\n  keyboard: true, // boolean\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Modal>}\n */\nconst getModalInstance = (element) => getInstance(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n * @type {BSN.InitCallback<Modal>}\n */\nconst modalInitCallback = (element) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = OriginalEvent(`show.bs.${modalString}`);\nconst shownModalEvent = OriginalEvent(`shown.bs.${modalString}`);\nconst hideModalEvent = OriginalEvent(`hide.bs.${modalString}`);\nconst hiddenModalEvent = OriginalEvent(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param {Modal} self the `Modal` instance\n */\nfunction setModalScrollbar(self) {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */'paddingLeft';\n    const padStyle = {};\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, (modalOverflow || clientHeight !== scrollHeight));\n}\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param {Modal} self the `Modal` instance\n * @param {boolean=} add when `true`, event listeners are added\n */\nfunction toggleModalDismiss(self, add) {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getWindow(element), resizeEvent, self.update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n}\n\n/**\n * Toggles on/off the `click` event listener of the `Modal` instance.\n * @param {Modal} self the `Modal` instance\n * @param {boolean=} add when `true`, event listener is added\n */\nfunction toggleModalHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach((btn) => action(btn, mouseclickEvent, modalClickHandler));\n  }\n}\n\n/**\n * Executes after a modal is hidden to the user.\n * @param {Modal} self the `Modal` instance\n * @param {Function} callback the `Modal` instance\n */\nfunction afterModalHide(self, callback) {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement);\n\n  /* istanbul ignore else */\n  if (callback) callback();\n\n  hiddenModalEvent.relatedTarget = relatedTarget;\n  dispatchEvent(element, hiddenModalEvent);\n}\n\n/**\n * Executes after a modal is shown to the user.\n * @param {Modal} self the `Modal` instance\n */\nfunction afterModalShow(self) {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget;\n  dispatchEvent(element, shownModalEvent);\n}\n\n/**\n * Executes before a modal is shown to the user.\n * @param {Modal} self the `Modal` instance\n */\nfunction beforeModalShow(self) {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n}\n\n/**\n * Executes before a modal is hidden to the user.\n * @param {Modal} self the `Modal` instance\n * @param {Function=} callback when `true` skip animation\n */\nfunction beforeModalHide(self, callback) {\n  const {\n    element, options, hasFade,\n  } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && !callback && hasFade && hasClass(overlay, showClass)\n    && !getCurrentOpen(element)) { // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self, callback);\n  }\n}\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n * @param {MouseEvent} e the `Event` object\n */\nfunction modalClickHandler(e) {\n  const { target } = e;\n\n  const trigger = target && closest(target, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.toggle();\n}\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param {KeyboardEvent} e the `Event` object\n */\nfunction modalKeyHandler({ code, target }) {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  const { options } = self;\n  /* istanbul ignore else */\n  if (options.keyboard && code === keyEscape // the keyboard option is enabled and the key is 27\n    && hasClass(element, showClass)) { // the modal is not visible\n    self.relatedTarget = null;\n    self.hide();\n  }\n}\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Event` object\n */\nfunction modalDismissHandler(e) {\n  const element = this;\n  const self = getModalInstance(element);\n\n  // this timer is needed\n  /* istanbul ignore next: must have a filter */\n  if (!self || Timer.get(element)) return;\n\n  const { options, isStatic, modalDialog } = self;\n  const { backdrop } = options;\n  const { target } = e;\n\n  const selectedText = getDocument(element).getSelection().toString().length;\n  const targetInsideDialog = modalDialog.contains(target);\n  const dismiss = target && closest(target, modalDismissSelector);\n\n  /* istanbul ignore else */\n  if (isStatic && !targetInsideDialog) {\n    Timer.set(element, () => {\n      addClass(element, modalStaticClass);\n      emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n    }, 17);\n  } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n    self.relatedTarget = dismiss || null;\n    self.hide();\n    e.preventDefault();\n  }\n}\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param {Modal} self the `Modal` instance\n */\nfunction staticTransitionEnd(self) {\n  const { element, modalDialog } = self;\n  const duration = getElementTransitionDuration(modalDialog) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n}\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target usually the `.modal` element\n   * @param {BSN.Options.Modal=} config instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n\n    // bind\n    const self = this;\n\n    // the modal\n    const { element } = self;\n\n    // the modal-dialog\n    /** @type {(HTMLElement)} */\n    self.modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    // modal can have multiple triggering elements\n    /** @type {HTMLElement[]} */\n    self.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))]\n      .filter((btn) => getTargetElement(btn) === element);\n\n    // additional internals\n    /** @type {boolean} */\n    self.isStatic = self.options.backdrop === 'static';\n    /** @type {boolean} */\n    self.hasFade = hasClass(element, fadeClass);\n    /** @type {HTMLElement?} */\n    self.relatedTarget = null;\n    /** @type {HTMLBodyElement | HTMLElement} */\n    self.container = getElementContainer(element);\n\n    // attach event listeners\n    toggleModalHandler(self, true);\n\n    // bind\n    self.update = self.update.bind(self);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return modalComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return modalDefaults; }\n  /* eslint-enable */\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    const self = this;\n    if (hasClass(self.element, showClass)) self.hide();\n    else self.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const self = this;\n    const {\n      element, options, hasFade, relatedTarget, container,\n    } = self;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showModalEvent.relatedTarget = relatedTarget || null;\n    dispatchEvent(element, showModalEvent);\n    if (showModalEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const this1 = getModalInstance(currentOpen);\n      const that1 = this1\n        || /* istanbul ignore next */getInstance(currentOpen, 'Offcanvas');\n      that1.hide();\n    }\n\n    if (backdrop) {\n      if (!container.contains(overlay)) {\n        appendOverlay(container, hasFade, true);\n      } else {\n        toggleOverlayType(true);\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n\n      showOverlay();\n      setTimeout(() => beforeModalShow(self), overlayDelay);\n    } else {\n      beforeModalShow(self);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hide the modal from the user.\n   * @param {Function=} callback when defined it will skip animation\n   */\n  hide(callback) {\n    const self = this;\n    const {\n      element, hasFade, relatedTarget,\n    } = self;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideModalEvent.relatedTarget = relatedTarget || null;\n    dispatchEvent(element, hideModalEvent);\n    if (hideModalEvent.defaultPrevented) return;\n    removeClass(element, showClass);\n    setAttribute(element, ariaHidden, 'true');\n    removeAttribute(element, ariaModal);\n\n    // if (hasFade && callback) {\n    /* istanbul ignore else */\n    if (hasFade) {\n      emulateTransitionEnd(element, () => beforeModalHide(self, callback));\n    } else {\n      beforeModalHide(self, callback);\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   * @this {Modal} the modal instance\n   */\n  update() {\n    const self = this;\n    /* istanbul ignore else */\n    if (hasClass(self.element, showClass)) setModalScrollbar(self);\n  }\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const self = this;\n    toggleModalHandler(self);\n    // use callback\n    self.hide(() => super.dispose());\n  }\n}\n\nObjectAssign(Modal, {\n  selector: modalSelector,\n  init: modalInitCallback,\n  getInstance: getModalInstance,\n});\n", "/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n", "/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport ariaHidden from '@thednp/shorty/src/strings/ariaHidden';\nimport ariaModal from '@thednp/shorty/src/strings/ariaModal';\nimport mouseclickEvent from '@thednp/shorty/src/strings/mouseclickEvent';\nimport keydownEvent from '@thednp/shorty/src/strings/keydownEvent';\nimport keyEscape from '@thednp/shorty/src/strings/keyEscape';\nimport setAttribute from '@thednp/shorty/src/attr/setAttribute';\nimport removeAttribute from '@thednp/shorty/src/attr/removeAttribute';\nimport querySelector from '@thednp/shorty/src/selectors/querySelector';\nimport querySelectorAll from '@thednp/shorty/src/selectors/querySelectorAll';\nimport closest from '@thednp/shorty/src/selectors/closest';\nimport hasClass from '@thednp/shorty/src/class/hasClass';\nimport addClass from '@thednp/shorty/src/class/addClass';\nimport removeClass from '@thednp/shorty/src/class/removeClass';\nimport getDocument from '@thednp/shorty/src/get/getDocument';\nimport getDocumentElement from '@thednp/shorty/src/get/getDocumentElement';\nimport getDocumentBody from '@thednp/shorty/src/get/getDocumentBody';\nimport getElementTransitionDuration from '@thednp/shorty/src/get/getElementTransitionDuration';\nimport dispatchEvent from '@thednp/shorty/src/misc/dispatchEvent';\nimport emulateTransitionEnd from '@thednp/shorty/src/misc/emulateTransitionEnd';\nimport ObjectAssign from '@thednp/shorty/src/misc/ObjectAssign';\nimport { getInstance } from '@thednp/shorty/src/misc/data';\nimport focus from '@thednp/shorty/src/misc/focus';\nimport OriginalEvent from '@thednp/shorty/src/misc/OriginalEvent';\nimport setElementStyle from '@thednp/shorty/src/misc/setElementStyle';\n\nimport { addListener, removeListener } from '@thednp/event-listener/src/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport getElementContainer from '../util/getElementContainer';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Offcanvas>}\n */\nconst getOffcanvasInstance = (element) => getInstance(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n * @type {BSN.InitCallback<Offcanvas>}\n */\nconst offcanvasInitCallback = (element) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = OriginalEvent(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = OriginalEvent(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = OriginalEvent(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = OriginalEvent(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n */\nfunction setOffCanvasScrollbar(self) {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n}\n\n/**\n * Toggles on/off the `click` event listeners.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n * @param {boolean=} add when *true*, listeners are added\n */\nfunction toggleOffcanvasEvents(self, add) {\n  const action = add ? addListener : removeListener;\n  self.triggers.forEach((btn) => action(btn, mouseclickEvent, offcanvasTriggerHandler));\n}\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n * @param {boolean=} add when *true* listeners are added\n */\nfunction toggleOffCanvasDismiss(self, add) {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n}\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n */\nfunction beforeOffcanvasShow(self) {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n}\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n * @param {Function=} callback the hide callback\n */\nfunction beforeOffcanvasHide(self, callback) {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => hideOffcanvasComplete(self, callback));\n  } else hideOffcanvasComplete(self, callback);\n}\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Event` object\n */\nfunction offcanvasTriggerHandler(e) {\n  const trigger = closest(this, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n}\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param {MouseEvent} e the `Event` object\n */\nfunction offcanvasDismissHandler(e) {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element);\n  const self = getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must have a filter */\n  if (!self) return;\n\n  const { options, triggers } = self;\n  const { backdrop } = options;\n  const trigger = closest(target, offcanvasToggleSelector);\n  const selection = getDocument(element).getSelection();\n\n  if (overlay.contains(target) && backdrop === 'static') return;\n\n  /* istanbul ignore else */\n  if (!(selection && selection.toString().length)\n    && ((!element.contains(target) && backdrop\n    && /* istanbul ignore next */(!trigger || triggers.includes(target)))\n    || (offCanvasDismiss && offCanvasDismiss.contains(target)))) {\n    self.relatedTarget = offCanvasDismiss && offCanvasDismiss.contains(target)\n      ? offCanvasDismiss : null;\n    self.hide();\n  }\n\n  /* istanbul ignore next */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n}\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param {KeyboardEvent} e the `Event` object\n */\nfunction offcanvasKeyDismissHandler({ code, target }) {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target));\n\n  const self = getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (self.options.keyboard && code === keyEscape) {\n    self.relatedTarget = null;\n    self.hide();\n  }\n}\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n */\nfunction showOffcanvasComplete(self) {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n}\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n * @param {Function} callback the hide callback\n */\nfunction hideOffcanvasComplete(self, callback) {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find((x) => isVisible(x));\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n  // callback\n  if (callback) callback();\n}\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target usually an `.offcanvas` element\n   * @param {BSN.Options.Offcanvas=} config instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    const self = this;\n\n    // instance element\n    const { element } = self;\n\n    // all the triggering buttons\n    /** @type {HTMLElement[]} */\n    self.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))]\n      .filter((btn) => getTargetElement(btn) === element);\n\n    // additional instance property\n    /** @type {HTMLBodyElement | HTMLElement} */\n    self.container = getElementContainer(element);\n    /** @type {HTMLElement?} */\n    self.relatedTarget = null;\n\n    // attach event listeners\n    toggleOffcanvasEvents(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return offcanvasComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return offcanvasDefaults; }\n  /* eslint-enable */\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    const self = this;\n    if (hasClass(self.element, showClass)) self.hide();\n    else self.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const self = this;\n    const {\n      element, options, container, relatedTarget,\n    } = self;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showOffcanvasEvent.relatedTarget = relatedTarget;\n    shownOffcanvasEvent.relatedTarget = relatedTarget;\n    dispatchEvent(element, showOffcanvasEvent);\n    if (showOffcanvasEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const this1 = getOffcanvasInstance(currentOpen);\n      const that1 = this1\n        || /* istanbul ignore next */getInstance(currentOpen, 'Modal');\n      that1.hide();\n    }\n\n    if (options.backdrop) {\n      if (!container.contains(overlay)) {\n        appendOverlay(container, true);\n      } else {\n        toggleOverlayType();\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeOffcanvasShow(self), overlayDelay);\n    } else {\n      beforeOffcanvasShow(self);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hides the offcanvas from the user.\n   * @param {Function=} callback when `true` it will skip animation\n   */\n  hide(callback) {\n    const self = this;\n    const { element, relatedTarget } = self;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideOffcanvasEvent.relatedTarget = relatedTarget;\n    hiddenOffcanvasEvent.relatedTarget = relatedTarget;\n    dispatchEvent(element, hideOffcanvasEvent);\n    if (hideOffcanvasEvent.defaultPrevented) return;\n\n    addClass(element, offcanvasTogglingClass);\n    removeClass(element, showClass);\n\n    if (!callback) {\n      emulateTransitionEnd(element, () => beforeOffcanvasHide(self, callback));\n    } else beforeOffcanvasHide(self, callback);\n  }\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const self = this;\n    toggleOffcanvasEvents(self);\n    self.hide(() => super.dispose());\n  }\n}\n\nObjectAssign(Offcanvas, {\n  selector: offcanvasSelector,\n  init: offcanvasInitCallback,\n  getInstance: getOffcanvasInstance,\n});\n", "/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n", "/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n", "/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n", "import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param {string} tipType the expected markup type\n * @returns {string} the template markup\n */\nexport default function getTipTemplate(tipType) {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n}\n", "/**\n * Checks if an element is an `<svg>` (or any type of SVG element),\n * `<img>` or `<video>`.\n *\n * *Tooltip* / *Popover* works different with media elements.\n * @param {any} element the target element\n * @returns {boolean} the query result\n */\n\nconst isMedia = (element) => (\n  element\n  && element.nodeType === 1\n  && ['SVG', 'Image', 'Video'].some((s) => element.constructor.name.includes(s))) || false;\nexport default isMedia;\n", "/**\n * Returns an `{x,y}` object with the target\n * `HTMLElement` / `Node` scroll position.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement | Window} element target node / element\n * @returns {{x: number, y: number}} the scroll tuple\n */\nexport default function getNodeScroll(element) {\n  const isWin = 'scrollX' in element;\n  const x = isWin ? element.scrollX : element.scrollLeft;\n  const y = isWin ? element.scrollY : element.scrollTop;\n\n  return { x, y };\n}\n", "import isHTMLElement from './isHTMLElement';\nimport getBoundingClientRect from '../get/getBoundingClientRect';\n\n/**\n * Checks if a target `HTMLElement` is affected by scale.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement} element target\n * @returns {boolean} the query result\n */\nexport default function isScaledElement(element) {\n  if (!element || !isHTMLElement(element)) return false;\n  const { width, height } = getBoundingClientRect(element);\n  const { offsetWidth, offsetHeight } = element;\n  return Math.round(width) !== offsetWidth\n    || Math.round(height) !== offsetHeight;\n}\n", "import isScaledElement from '../is/isScaledElement';\nimport isHTMLElement from '../is/isHTMLElement';\nimport getBoundingClientRect from './getBoundingClientRect';\n\n/**\n * Returns the rect relative to an offset parent.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement} element target\n * @param {ParentNode | Window} offsetParent the container / offset parent\n * @param {{x: number, y: number}} scroll the offsetParent scroll position\n * @returns {SHORTY.OffsetRect}\n */\nexport default function getRectRelativeToOffsetParent(element, offsetParent, scroll) {\n  const isParentAnElement = isHTMLElement(offsetParent);\n  const rect = getBoundingClientRect(element, isParentAnElement && isScaledElement(offsetParent));\n  const offsets = { x: 0, y: 0 };\n\n  /* istanbul ignore next */\n  if (isParentAnElement) {\n    const offsetRect = getBoundingClientRect(offsetParent, true);\n    offsets.x = offsetRect.x + offsetParent.clientLeft;\n    offsets.y = offsetRect.y + offsetParent.clientTop;\n  }\n\n  return {\n    x: rect.left + scroll.x - offsets.x,\n    y: rect.top + scroll.y - offsets.y,\n    width: rect.width,\n    height: rect.height,\n  };\n}\n", "/** @type {Record<string, string>} */\nconst tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n", "import isHTMLElement from '@thednp/shorty/src/is/isHTMLElement';\nimport isMedia from '@thednp/shorty/src/is/isMedia';\nimport isRTL from '@thednp/shorty/src/is/isRTL';\nimport getElementStyle from '@thednp/shorty/src/get/getElementStyle';\nimport getBoundingClientRect from '@thednp/shorty/src/get/getBoundingClientRect';\nimport getNodeScroll from '@thednp/shorty/src/get/getNodeScroll';\nimport getRectRelativeToOffsetParent from '@thednp/shorty/src/get/getRectRelativeToOffsetParent';\nimport getDocumentElement from '@thednp/shorty/src/get/getDocumentElement';\nimport setElementStyle from '@thednp/shorty/src/misc/setElementStyle';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\n\n/**\n * Style popovers and tooltips.\n * @param {BSN.Tooltip | BSN.Popover} self the `Popover` / `Tooltip` instance\n * @param {PointerEvent=} e event object\n */\nexport default function styleTip(self, e) {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const {\n    element, tooltip, options, arrow, offsetParent,\n  } = self;\n  const tipPositions = { ...tipClassPositions };\n\n  const RTL = isRTL(element);\n  if (RTL) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // reset tooltip style (top: 0, left: 0 works best)\n  setElementStyle(tooltip, {\n    // top: '0px', left: '0px', right: '', bottom: '',\n    top: '', left: '', right: '', bottom: '',\n  });\n  const isPopover = self.name === popoverComponent;\n  const {\n    offsetWidth: tipWidth, offsetHeight: tipHeight,\n  } = tooltip;\n  const {\n    clientWidth: htmlcw, clientHeight: htmlch,\n  } = getDocumentElement(element);\n  const { container } = options;\n  let { placement } = options;\n  const {\n    left: parentLeft, right: parentRight, top: parentTop,\n  } = getBoundingClientRect(container, true);\n  const {\n    clientWidth: parentCWidth, offsetWidth: parentOWidth,\n  } = container;\n  const scrollbarWidth = Math.abs(parentCWidth - parentOWidth);\n  // const tipAbsolute = getElementStyle(tooltip, 'position') === 'absolute';\n  const parentPosition = getElementStyle(container, 'position');\n  // const absoluteParent = parentPosition === 'absolute';\n  const fixedParent = parentPosition === 'fixed';\n  const staticParent = parentPosition === 'static';\n  const stickyParent = parentPosition === 'sticky';\n  const isSticky = stickyParent && parentTop === parseFloat(getElementStyle(container, 'top'));\n  // const absoluteTarget = getElementStyle(element, 'position') === 'absolute';\n  // const stickyFixedParent = ['sticky', 'fixed'].includes(parentPosition);\n  const leftBoundry = RTL && fixedParent ? scrollbarWidth : 0;\n  const rightBoundry = fixedParent ? parentCWidth + parentLeft + (RTL ? scrollbarWidth : 0)\n    : parentCWidth + parentLeft + (htmlcw - parentRight) - 1;\n  const {\n    width: elemWidth,\n    height: elemHeight,\n    left: elemRectLeft,\n    right: elemRectRight,\n    top: elemRectTop,\n  } = getBoundingClientRect(element, true);\n\n  const scroll = getNodeScroll(offsetParent);\n  const { x, y } = getRectRelativeToOffsetParent(element, offsetParent, scroll);\n  // reset arrow style\n  setElementStyle(arrow, {\n    top: '', left: '', right: '', bottom: '',\n  });\n  let topPosition;\n  let leftPosition;\n  let rightPosition;\n  let arrowTop;\n  let arrowLeft;\n  let arrowRight;\n\n  const arrowWidth = arrow.offsetWidth || 0;\n  const arrowHeight = arrow.offsetHeight || 0;\n  const arrowAdjust = arrowWidth / 2;\n\n  // check placement\n  let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n  let bottomExceed = elemRectTop + tipHeight + elemHeight\n    + arrowHeight >= htmlch;\n  let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n  let rightExceed = elemRectLeft + tipWidth + elemWidth\n    + arrowWidth >= rightBoundry;\n\n  const horizontal = ['left', 'right'];\n  const vertical = ['top', 'bottom'];\n\n  topExceed = horizontal.includes(placement)\n    ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n    : topExceed;\n  bottomExceed = horizontal.includes(placement)\n    ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n    : bottomExceed;\n  leftExceed = vertical.includes(placement)\n    ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry\n    : leftExceed;\n  rightExceed = vertical.includes(placement)\n    ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n    : rightExceed;\n\n  // first remove side positions if both left and right limits are exceeded\n  // we usually fall back to top|bottom\n  placement = (horizontal.includes(placement)) && leftExceed && rightExceed ? 'top' : placement;\n  // second, recompute placement\n  placement = placement === 'top' && topExceed ? 'bottom' : placement;\n  placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n  placement = placement === 'left' && leftExceed ? 'right' : placement;\n  placement = placement === 'right' && rightExceed ? 'left' : placement;\n\n  // update tooltip/popover class\n  if (!tooltip.className.includes(placement)) {\n    tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n  }\n\n  // compute tooltip / popover coordinates\n  /* istanbul ignore else */\n  if (horizontal.includes(placement)) { // secondary|side positions\n    if (placement === 'left') { // LEFT\n      leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n    } else { // RIGHT\n      leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n    }\n\n    // adjust top and arrow\n    if (topExceed) {\n      topPosition = y;\n      topPosition += (isSticky ? -parentTop - scroll.y : 0);\n\n      arrowTop = elemHeight / 2 - arrowWidth;\n    } else if (bottomExceed) {\n      topPosition = y - tipHeight + elemHeight;\n      topPosition += (isSticky ? -parentTop - scroll.y : 0);\n\n      arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n    } else {\n      topPosition = y - tipHeight / 2 + elemHeight / 2;\n      topPosition += (isSticky ? -parentTop - scroll.y : 0);\n\n      arrowTop = tipHeight / 2 - arrowHeight / 2;\n    }\n  } else if (vertical.includes(placement)) {\n    if (e && isMedia(element)) {\n      let eX = 0;\n      let eY = 0;\n      if (staticParent) {\n        eX = e.pageX;\n        eY = e.pageY;\n      } else { // fixedParent | stickyParent\n        eX = e.clientX - parentLeft + (fixedParent ? scroll.x : 0);\n        eY = e.clientY - parentTop + (fixedParent ? scroll.y : 0);\n      }\n\n      // some weird RTL bug\n      eX -= RTL && fixedParent && scrollbarWidth ? scrollbarWidth : 0;\n\n      if (placement === 'top') {\n        topPosition = eY - tipHeight - arrowWidth;\n      } else {\n        topPosition = eY + arrowWidth;\n      }\n\n      // adjust (left | right) and also the arrow\n      if (e.clientX - tipWidth / 2 < leftBoundry) {\n        leftPosition = 0;\n        arrowLeft = eX - arrowAdjust;\n      } else if (e.clientX + tipWidth / 2 > rightBoundry) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = rightBoundry - eX - arrowAdjust;\n        arrowRight -= fixedParent ? parentLeft + (RTL ? scrollbarWidth : 0) : 0;\n\n      // normal top/bottom\n      } else {\n        leftPosition = eX - tipWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    } else {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else { // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n  }\n\n  // apply style to tooltip/popover\n  setElementStyle(tooltip, {\n    top: `${topPosition}px`,\n    left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n    right: rightPosition !== undefined ? `${rightPosition}px` : '',\n  });\n\n  // update arrow placement\n  /* istanbul ignore else */\n  if (isHTMLElement(arrow)) {\n    if (arrowTop !== undefined) {\n      arrow.style.top = `${arrowTop}px`;\n    }\n    if (arrowLeft !== undefined) {\n      arrow.style.left = `${arrowLeft}px`;\n    } else if (arrowRight !== undefined) {\n      arrow.style.right = `${arrowRight}px`;\n    }\n  }\n}\n", "import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\n\nconst tooltipDefaults = {\n  /** @type {string} */\n  template: getTipTemplate(tooltipString),\n  /** @type {string?} */\n  title: null, // string\n  /** @type {string?} */\n  customClass: null, // string | null\n  /** @type {string} */\n  trigger: 'hover focus',\n  /** @type {string?} */\n  placement: 'top', // string\n  /** @type {((c:string)=>string)?} */\n  sanitizeFn: null, // function\n  /** @type {boolean} */\n  animation: true, // bool\n  /** @type {number} */\n  delay: 200, // number\n  /** @type {HTMLElement?} */\n  container: null,\n};\nexport default tooltipDefaults;\n", "/**\n * A global namespace for aria-describedby.\n * @type {string}\n */\nconst ariaDescribedBy = 'aria-describedby';\nexport default ariaDescribedBy;\n", "/**\n * A global namespace for `mousedown` event.\n * @type {string}\n */\nconst mousedownEvent = 'mousedown';\nexport default mousedownEvent;\n", "/**\n * A global namespace for `mouseenter` event.\n * @type {string}\n */\nconst mouseenterEvent = 'mouseenter';\nexport default mouseenterEvent;\n", "/**\n * A global namespace for `mouseleave` event.\n * @type {string}\n */\nconst mouseleaveEvent = 'mouseleave';\nexport default mouseleaveEvent;\n", "/**\n * A global namespace for `mousemove` event.\n * @type {string}\n */\nconst mousemoveEvent = 'mousemove';\nexport default mousemoveEvent;\n", "/**\n * A global namespace for `focusin` event.\n * @type {string}\n */\nconst focusinEvent = 'focusin';\nexport default focusinEvent;\n", "/**\n * A global namespace for `focusout` event.\n * @type {string}\n */\nconst focusoutEvent = 'focusout';\nexport default focusoutEvent;\n", "/**\n * A global namespace for `hover` event.\n * @type {string}\n */\nconst mousehoverEvent = 'hover';\nexport default mousehoverEvent;\n", "/**\n * A global namespace for `touchstart` event.\n * @type {string}\n */\nconst touchstartEvent = 'touchstart';\nexport default touchstartEvent;\n", "let elementUID = 0;\nlet elementMapUID = 0;\nconst elementIDMap = new Map();\n\n/**\n * Returns a unique identifier for popover, tooltip, scrollspy.\n *\n * @param {HTMLElement} element target element\n * @param {string=} key predefined key\n * @returns {number} an existing or new unique ID\n */\nexport default function getUID(element, key) {\n  let result = key ? elementUID : elementMapUID;\n\n  if (key) {\n    const elID = getUID(element);\n    const elMap = elementIDMap.get(elID) || new Map();\n    if (!elementIDMap.has(elID)) {\n      elementIDMap.set(elID, elMap);\n    }\n    if (!elMap.has(key)) {\n      elMap.set(key, result);\n      elementUID += 1;\n    } else result = elMap.get(key);\n  } else {\n    const elkey = element.id || element;\n\n    if (!elementIDMap.has(elkey)) {\n      elementIDMap.set(elkey, result);\n      elementMapUID += 1;\n    } else result = elementIDMap.get(elkey);\n  }\n  return result;\n}\n", "/**\n * Checks if an object is a `Function`.\n *\n * @param {any} fn the target object\n * @returns {boolean} the query result\n */\nconst isFunction = (fn) => (fn && fn.constructor.name === 'Function') || false;\nexport default isFunction;\n", "const { userAgentData: uaDATA } = navigator;\n\n/**\n * A global namespace for `userAgentData` object.\n */\nconst userAgentData = uaDATA;\nexport default userAgentData;\n", "const { userAgent: userAgentString } = navigator;\n\n/**\n * A global namespace for `navigator.userAgent` string.\n */\nconst userAgent = userAgentString;\nexport default userAgent;\n", "import userAgentData from '../strings/userAgentData';\nimport userAgent from '../strings/userAgent';\n\nconst appleBrands = /(iPhone|iPod|iPad)/;\n\n/**\n * A global `boolean` for Apple browsers.\n * @type {boolean}\n */\nconst isApple = userAgentData ? userAgentData.brands.some((x) => appleBrands.test(x.brand))\n  : /* istanbul ignore next */appleBrands.test(userAgent);\n\nexport default isApple;\n", "/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n", "/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n", "/**\n * Checks if an object is a `NodeList`.\n * => equivalent to `object instanceof NodeList`\n *\n * @param {any} object the target object\n * @returns {boolean} the query result\n */\nconst isNodeList = (object) => (object && object.constructor.name === 'NodeList') || false;\nexport default isNodeList;\n", "/**\n * Shortcut for `typeof SOMETHING === \"string\"`.\n *\n * @param  {any} str input value\n * @returns {boolean} the query result\n */\nconst isString = (str) => typeof str === 'string';\nexport default isString;\n", "/**\n * Shortcut for `Array.isArray()` static method.\n *\n * @param  {any} arr array-like iterable object\n * @returns {boolean} the query result\n */\nconst isArray = (arr) => Array.isArray(arr);\nexport default isArray;\n", "import getWindow from '@thednp/shorty/src/get/getWindow';\nimport isHTMLElement from '@thednp/shorty/src/is/isHTMLElement';\nimport isNodeList from '@thednp/shorty/src/is/isNodeList';\nimport isString from '@thednp/shorty/src/is/isString';\nimport isFunction from '@thednp/shorty/src/is/isFunction';\nimport isArray from '@thednp/shorty/src/is/isArray';\nimport isNode from '@thednp/shorty/src/is/isNode';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param {HTMLElement} element target\n * @param {Node | string} content the `Element` to append / string\n * @param {ReturnType<any>} sanitizeFn a function to sanitize string content\n */\nexport default function setHtml(element, content, sanitizeFn) {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element) || (isString(content) && !content.length)) return;\n\n  /* istanbul ignore else */\n  if (isString(content)) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const win = getWindow(element);\n    const domParser = new win.DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content)\n    || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n}\n", "import isRTL from '@thednp/shorty/src/is/isRTL';\nimport isHTMLElement from '@thednp/shorty/src/is/isHTMLElement';\nimport querySelector from '@thednp/shorty/src/selectors/querySelector';\nimport setAttribute from '@thednp/shorty/src/attr/setAttribute';\nimport hasClass from '@thednp/shorty/src/class/hasClass';\nimport addClass from '@thednp/shorty/src/class/addClass';\nimport createElement from '@thednp/shorty/src/misc/createElement';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param {BSN.Popover | BSN.Tooltip} self the `Tooltip` / `Popover` instance\n */\nexport default function createTip(self) {\n  const { id, element, options } = self;\n  const {\n    animation, customClass, sanitizeFn, placement, dismissible,\n    title, content, template, btnClose,\n  } = options;\n  const isTooltip = self.name === tooltipComponent;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts = [];\n  let contentParts = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  /** @type {HTMLElement?} */\n  let tooltipTemplate;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div');\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate) && tooltipTemplate.cloneNode(true);\n\n  const { tooltip } = self;\n\n  // set id and role attributes\n  setAttribute(tooltip, 'id', id);\n  setAttribute(tooltip, 'role', tooltipString);\n\n  const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n  const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n  const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n  // set arrow and enable access for styleTip\n  self.arrow = querySelector(`.${tipString}-arrow`, tooltip);\n  const { arrow } = self;\n\n  if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n  else {\n    const tempTitle = createElement('div');\n    setHtml(tempTitle, title, sanitizeFn);\n    titleParts = [...[...tempTitle.childNodes]];\n  }\n\n  if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n  else {\n    const tempContent = createElement('div');\n    setHtml(tempContent, content, sanitizeFn);\n    contentParts = [...[...tempContent.childNodes]];\n  }\n\n  // set dismissible button\n  if (dismissible) {\n    if (title) {\n      if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div');\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        titleParts = [...titleParts, tempBtn.firstChild];\n      }\n    } else {\n      /* istanbul ignore else */\n      if (tooltipHeader) tooltipHeader.remove();\n      if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div');\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        contentParts = [...contentParts, tempBtn.firstChild];\n      }\n    }\n  }\n\n  // fill the template with content from options / data attributes\n  // also sanitize title && content\n  /* istanbul ignore else */\n  if (!isTooltip) {\n    /* istanbul ignore else */\n    if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n    /* istanbul ignore else */\n    if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n    // set btn\n    self.btn = querySelector('.btn-close', tooltip);\n  } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n  // Bootstrap 5.2.x\n  addClass(tooltip, 'position-absolute');\n  addClass(arrow, 'position-absolute');\n\n  // set popover animation and placement\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n  /* istanbul ignore else */\n  if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n  /* istanbul ignore else */\n  if (customClass && !hasClass(tooltip, customClass)) {\n    addClass(tooltip, customClass);\n  }\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n}\n", "import isHTMLElement from '@thednp/shorty/src/is/isHTMLElement';\n\n/**\n * @param {HTMLElement} tip target\n * @param {ParentNode} container parent container\n * @returns {boolean}\n */\nexport default function isVisibleTip(tip, container) {\n  return isHTMLElement(tip) && container.contains(tip);\n}\n", "/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport ariaDescribedBy from '@thednp/shorty/src/strings/ariaDescribedBy';\nimport mouseclickEvent from '@thednp/shorty/src/strings/mouseclickEvent';\nimport mousedownEvent from '@thednp/shorty/src/strings/mousedownEvent';\nimport mouseenterEvent from '@thednp/shorty/src/strings/mouseenterEvent';\nimport mouseleaveEvent from '@thednp/shorty/src/strings/mouseleaveEvent';\nimport mousemoveEvent from '@thednp/shorty/src/strings/mousemoveEvent';\nimport focusEvent from '@thednp/shorty/src/strings/focusEvent';\nimport focusinEvent from '@thednp/shorty/src/strings/focusinEvent';\nimport focusoutEvent from '@thednp/shorty/src/strings/focusoutEvent';\nimport mousehoverEvent from '@thednp/shorty/src/strings/mousehoverEvent';\nimport scrollEvent from '@thednp/shorty/src/strings/scrollEvent';\nimport resizeEvent from '@thednp/shorty/src/strings/resizeEvent';\nimport touchstartEvent from '@thednp/shorty/src/strings/touchstartEvent';\nimport hasAttribute from '@thednp/shorty/src/attr/hasAttribute';\nimport setAttribute from '@thednp/shorty/src/attr/setAttribute';\nimport getAttribute from '@thednp/shorty/src/attr/getAttribute';\nimport removeAttribute from '@thednp/shorty/src/attr/removeAttribute';\nimport getWindow from '@thednp/shorty/src/get/getWindow';\nimport getDocument from '@thednp/shorty/src/get/getDocument';\nimport getDocumentBody from '@thednp/shorty/src/get/getDocumentBody';\n// import getElementTransitionDuration from '@thednp/shorty/src/get/getElementTransitionDuration';\nimport getElementStyle from '@thednp/shorty/src/get/getElementStyle';\nimport getUID from '@thednp/shorty/src/get/getUID';\nimport closest from '@thednp/shorty/src/selectors/closest';\nimport querySelector from '@thednp/shorty/src/selectors/querySelector';\nimport addClass from '@thednp/shorty/src/class/addClass';\nimport hasClass from '@thednp/shorty/src/class/hasClass';\nimport removeClass from '@thednp/shorty/src/class/removeClass';\nimport ObjectAssign from '@thednp/shorty/src/misc/ObjectAssign';\nimport { getInstance } from '@thednp/shorty/src/misc/data';\nimport isFunction from '@thednp/shorty/src/is/isFunction';\nimport isMedia from '@thednp/shorty/src/is/isMedia';\nimport isApple from '@thednp/shorty/src/boolean/isApple';\nimport dispatchEvent from '@thednp/shorty/src/misc/dispatchEvent';\nimport passiveHandler from '@thednp/shorty/src/misc/passiveHandler';\nimport emulateTransitionEnd from '@thednp/shorty/src/misc/emulateTransitionEnd';\nimport Timer from '@thednp/shorty/src/misc/timer';\nimport focus from '@thednp/shorty/src/misc/focus';\nimport OriginalEvent from '@thednp/shorty/src/misc/OriginalEvent';\nimport toLowerCase from '@thednp/shorty/src/misc/toLowerCase';\n\nimport { addListener, removeListener } from '@thednp/event-listener/src/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport isVisibleTip from '../util/isVisibleTip';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Tooltip>}\n */\nlet getTooltipInstance = (element) => getInstance(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n * @type {BSN.InitCallback<Tooltip>}\n */\nconst tooltipInitCallback = (element) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param {Tooltip} self the `Tooltip` instance\n */\nfunction removeTooltip(self) {\n  const { element, tooltip } = self;\n  removeAttribute(element, ariaDescribedBy);\n  tooltip.remove();\n}\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {Function=} callback the parent dispose callback\n */\nfunction disposeTooltipComplete(self, callback) {\n  const { element } = self;\n  toggleTooltipHandlers(self);\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n}\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {boolean=} add when `true`, event listeners are added\n */\nfunction toggleTooltipAction(self, add) {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch, passiveHandler);\n\n  /* istanbul ignore else */\n  if (!isMedia(element)) {\n    [scrollEvent, resizeEvent].forEach((ev) => {\n      action(getWindow(element), ev, self.update, passiveHandler);\n    });\n  }\n}\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param {Tooltip} self the `Tooltip` instance\n */\nfunction tooltipShownAction(self) {\n  const { element } = self;\n  const shownTooltipEvent = OriginalEvent(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n}\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {Function=} callback the dispose callback\n */\nfunction tooltipHiddenAction(self, callback) {\n  const { element } = self;\n  const hiddenTooltipEvent = OriginalEvent(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n  if (isFunction(callback)) callback();\n  Timer.clear(element, 'out');\n}\n\n/**\n * Toggles on/off the `Tooltip` event listeners.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {boolean=} add when `true`, event listeners are added\n */\nfunction toggleTooltipHandlers(self, add) {\n  const action = add ? addListener : removeListener;\n  // btn is only for dismissible popover\n  const { element, options, btn } = self;\n  const { trigger, dismissible } = options;\n\n  if (trigger.includes('manual')) return;\n\n  self.enabled = !!add;\n\n  /** @type {string[]} */\n  const triggerOptions = trigger.split(' ');\n  const elemIsMedia = isMedia(element);\n\n  if (elemIsMedia) {\n    action(element, mousemoveEvent, self.update, passiveHandler);\n  }\n\n  triggerOptions.forEach((tr) => {\n    /* istanbul ignore else */\n    if (elemIsMedia || tr === mousehoverEvent) {\n      action(element, mousedownEvent, self.show);\n      action(element, mouseenterEvent, self.show);\n\n      /* istanbul ignore else */\n      if (dismissible && btn) {\n        action(btn, mouseclickEvent, self.hide);\n      } else {\n        action(element, mouseleaveEvent, self.hide);\n        action(getDocument(element), touchstartEvent, self.handleTouch, passiveHandler);\n      }\n    } else if (tr === mouseclickEvent) {\n      action(element, tr, (!dismissible ? self.toggle : self.show));\n    } else if (tr === focusEvent) {\n      action(element, focusinEvent, self.show);\n      /* istanbul ignore else */\n      if (!dismissible) action(element, focusoutEvent, self.hide);\n      /* istanbul ignore else */\n      if (isApple) {\n        action(element, mouseclickEvent, () => focus(element));\n      }\n    }\n  });\n}\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {boolean=} add when `true`, event listeners are added\n */\nfunction toggleTooltipOpenHandlers(self, add) {\n  const action = add ? addListener : removeListener;\n  const { element, options, offsetParent } = self;\n  const { container } = options;\n  const { offsetHeight, scrollHeight } = container;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  if (!isMedia(element)) {\n    const win = getWindow(element);\n    const overflow = offsetHeight !== scrollHeight;\n    const scrollTarget = overflow || offsetParent !== win ? container : win;\n    action(win, resizeEvent, self.update, passiveHandler);\n    action(scrollTarget, scrollEvent, self.update, passiveHandler);\n  }\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.hide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.hide);\n}\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {string=} content when `true`, event listeners are added\n */\nfunction toggleTooltipTitle(self, content) {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(element, titleAtt[content ? 0 : 1],\n    (content || getAttribute(element, titleAtt[0])));\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n}\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target the target element\n   * @param {BSN.Options.Tooltip=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n\n    // bind\n    const self = this;\n    const { element } = self;\n    const isTooltip = self.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = (elem) => getInstance(elem, tipComponent);\n\n    // additional properties\n    /** @type {any} */\n    self.tooltip = {};\n    if (!isTooltip) {\n      /** @type {any?} */\n      self.btn = null;\n    }\n    /** @type {any} */\n    self.arrow = {};\n    /** @type {any} */\n    self.offsetParent = {};\n    /** @type {boolean} */\n    self.enabled = true;\n    /** @type {string} Set unique ID for `aria-describedby`. */\n    self.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = self;\n\n    // invalidate\n    if ((!options.title && isTooltip) || (!isTooltip && !options.content)) {\n      // throw Error(`${this.name} Error: target has no content set.`);\n      return;\n    }\n\n    const container = querySelector(options.container, getDocument(element));\n    const idealContainer = getElementContainer(element);\n\n    // bypass container option when its position is static/relative\n    self.options.container = !container || (container\n      && ['static', 'relative'].includes(getElementStyle(container, 'position')))\n      ? idealContainer\n      : /* istanbul ignore next */container || getDocumentBody(element);\n\n    // reset default options\n    tooltipDefaults[titleAttr] = null;\n\n    // all functions bind\n    self.handleTouch = self.handleTouch.bind(self);\n    self.update = self.update.bind(self);\n    self.show = self.show.bind(self);\n    self.hide = self.hide.bind(self);\n    self.toggle = self.toggle.bind(self);\n\n    // set title attributes and add event listeners\n    /* istanbul ignore else */\n    if (hasAttribute(element, titleAttr) && isTooltip) {\n      toggleTooltipTitle(self, options.title);\n    }\n\n    // create tooltip here\n    createTip(self);\n\n    // attach events\n    toggleTooltipHandlers(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return tooltipComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return tooltipDefaults; }\n  /* eslint-enable */\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /**\n   * Shows the tooltip.\n   *\n   * @param {Event=} e the `Event` object\n   * @this {Tooltip}\n   */\n  show(e) {\n    const self = this;\n    const {\n      options, tooltip, element, id,\n    } = self;\n    const { container, animation } = options;\n    const outTimer = Timer.get(element, 'out');\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !isVisibleTip(tooltip, container)) {\n      Timer.set(element, () => {\n        const showTooltipEvent = OriginalEvent(`show.bs.${toLowerCase(self.name)}`);\n        dispatchEvent(element, showTooltipEvent);\n        if (showTooltipEvent.defaultPrevented) return;\n\n        // append to container\n        container.append(tooltip);\n        setAttribute(element, ariaDescribedBy, `#${id}`);\n        // set offsetParent\n        self.offsetParent = getElementContainer(tooltip, true);\n\n        self.update(e);\n        toggleTooltipOpenHandlers(self, true);\n\n        /* istanbul ignore else */\n        if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n        /* istanbul ignore else */\n        if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(self));\n        else tooltipShownAction(self);\n      }, 17, 'in');\n    }\n  }\n\n  /**\n   * Hides the tooltip.\n   *\n   * @this {Tooltip} the Tooltip instance\n   * @param {Function=} callback the dispose callback\n   */\n  hide(callback) {\n    const self = this;\n    const { options, tooltip, element } = self;\n    const { container, animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && isVisibleTip(tooltip, container)) {\n      Timer.set(element, () => {\n        const hideTooltipEvent = OriginalEvent(`hide.bs.${toLowerCase(self.name)}`);\n        dispatchEvent(element, hideTooltipEvent);\n\n        if (hideTooltipEvent.defaultPrevented) return;\n\n        removeClass(tooltip, showClass);\n        toggleTooltipOpenHandlers(self);\n\n        /* istanbul ignore else */\n        if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(self, callback));\n        else tooltipHiddenAction(self, callback);\n      }, delay + 17, 'out');\n    }\n  }\n\n  /**\n   * Updates the tooltip position.\n   *\n   * @param {Event=} e the `Event` object\n   * @this {Tooltip} the `Tooltip` instance\n   */\n  update(e) {\n    styleTip(this, e);\n  }\n\n  /**\n   * Toggles the tooltip visibility.\n   *\n   * @param {Event=} e the `Event` object\n   * @this {Tooltip} the instance\n   */\n  toggle(e) {\n    const self = this;\n    const { tooltip, options } = self;\n\n    if (!isVisibleTip(tooltip, options.container)) self.show(e);\n    else self.hide();\n  }\n\n  /** Enables the tooltip. */\n  enable() {\n    const self = this;\n    const { enabled } = self;\n    /* istanbul ignore else */\n    if (!enabled) {\n      toggleTooltipHandlers(self, true);\n      self.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const self = this;\n    const {\n      tooltip, options, enabled,\n    } = self;\n    const { animation, container } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (isVisibleTip(tooltip, container) && animation) {\n        self.hide(() => toggleTooltipHandlers(self));\n      } else {\n        toggleTooltipHandlers(self);\n      }\n      self.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    const self = this;\n    if (!self.enabled) self.enable();\n    else self.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch({ target }) {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore next */\n    if (tooltip.contains(target) || target === element\n      || (target && element.contains(target))) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  }\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const self = this;\n    const { tooltip, options } = self;\n    const callback = () => disposeTooltipComplete(self, () => super.dispose());\n\n    if (options.animation && isVisibleTip(tooltip, options.container)) {\n      self.options.delay = 0; // reset delay\n      self.hide(callback);\n    } else {\n      callback();\n    }\n  }\n}\n\nObjectAssign(Tooltip, {\n  selector: tooltipSelector,\n  init: tooltipInitCallback,\n  getInstance: getTooltipInstance,\n  styleTip,\n});\n", "/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport ObjectAssign from '@thednp/shorty/src/misc/ObjectAssign';\nimport focus from '@thednp/shorty/src/misc/focus';\nimport { getInstance } from '@thednp/shorty/src/misc/data';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip-native';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults = {\n  ...tooltipDefaults,\n  /** @type {string} */\n  template: getTipTemplate(popoverString),\n  /** @type {string} */\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n  /** @type {boolean} */\n  dismissible: false,\n  /** @type {string?} */\n  content: null,\n};\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  /* eslint-disable -- we want to specify Popover Options */\n  /**\n   * @param {HTMLElement | string} target the target element\n   * @param {BSN.Options.Popover=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */ \n  get name() { return popoverComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return popoverDefaults; }\n  /* eslint-enable */\n\n  /* extend original `show()` */\n  show() {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  }\n}\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Popover>}\n */\nconst getPopoverInstance = (element) => getInstance(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n * @type {BSN.InitCallback<Popover>}\n */\nconst popoverInitCallback = (element) => new Popover(element);\n\nObjectAssign(Popover, {\n  selector: popoverSelector,\n  init: popoverInitCallback,\n  getInstance: getPopoverInstance,\n  styleTip,\n});\n", "/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n", "/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n", "/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport getAttribute from '@thednp/shorty/src/attr/getAttribute';\nimport querySelector from '@thednp/shorty/src/selectors/querySelector';\nimport getElementsByTagName from '@thednp/shorty/src/selectors/getElementsByTagName';\nimport addClass from '@thednp/shorty/src/class/addClass';\nimport hasClass from '@thednp/shorty/src/class/hasClass';\nimport removeClass from '@thednp/shorty/src/class/removeClass';\nimport getWindow from '@thednp/shorty/src/get/getWindow';\nimport getDocument from '@thednp/shorty/src/get/getDocument';\nimport getDocumentElement from '@thednp/shorty/src/get/getDocumentElement';\nimport getDocumentBody from '@thednp/shorty/src/get/getDocumentBody';\nimport getBoundingClientRect from '@thednp/shorty/src/get/getBoundingClientRect';\nimport dispatchEvent from '@thednp/shorty/src/misc/dispatchEvent';\nimport passiveHandler from '@thednp/shorty/src/misc/passiveHandler';\nimport ObjectAssign from '@thednp/shorty/src/misc/ObjectAssign';\nimport scrollEvent from '@thednp/shorty/src/strings/scrollEvent';\nimport { getInstance } from '@thednp/shorty/src/misc/data';\nimport OriginalEvent from '@thednp/shorty/src/misc/OriginalEvent';\nimport isWindow from '@thednp/shorty/src/is/isWindow';\nimport isHTMLElement from '@thednp/shorty/src/is/isHTMLElement';\n\nimport { addListener, removeListener } from '@thednp/event-listener/src/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<ScrollSpy>}\n */\nconst getScrollSpyInstance = (element) => getInstance(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n * @type {BSN.InitCallback<ScrollSpy>}\n */\nconst scrollspyInitCallback = (element) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = OriginalEvent(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n * @param {ScrollSpy} self the `ScrollSpy` instance\n */\nfunction updateSpyTargets(self) {\n  const {\n    target, scrollTarget, options, itemsLength, scrollHeight, element,\n  } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget && getScrollHeight(scrollTarget);\n\n  self.scrollTop = isWin ? scrollTarget.scrollY : scrollTarget.scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (itemsLength !== links.length || scrollHEIGHT !== scrollHeight)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach((link) => {\n      href = getAttribute(link, 'href');\n      targetItem = href && href.charAt(0) === '#' && href.slice(-1) !== '#'\n        && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n}\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n * @param {Node | Window} scrollTarget the `ScrollSpy` instance\n * @return {number} `scrollTarget` height\n */\nfunction getScrollHeight(scrollTarget) {\n  return isHTMLElement(scrollTarget)\n    ? scrollTarget.scrollHeight\n    : getDocumentElement(scrollTarget).scrollHeight;\n}\n\n/**\n * Returns the height property of the scrolling element.\n * @param {ScrollSpy} params the `ScrollSpy` instance\n * @returns {number}\n */\nfunction getOffsetHeight({ element, scrollTarget }) {\n  return (isWindow(scrollTarget))\n    ? scrollTarget.innerHeight\n    : getBoundingClientRect(element).height;\n}\n\n/**\n * Clear all items of the target.\n * @param {HTMLElement} target a single item\n */\nfunction clear(target) {\n  [...getElementsByTagName('A', target)].forEach((item) => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n}\n\n/**\n * Activates a new item.\n * @param {ScrollSpy} self the `ScrollSpy` instance\n * @param {HTMLElement} item a single item\n */\nfunction activate(self, item) {\n  const { target, element } = self;\n  clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach((menuItem) => {\n    /** @type {HTMLElement?} */\n    const parentLink = menuItem.previousElementSibling;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n}\n\n/**\n * Toggles on/off the component event listener.\n * @param {ScrollSpy} self the `ScrollSpy` instance\n * @param {boolean=} add when `true`, listener is added\n */\nfunction toggleSpyHandlers(self, add) {\n  const action = add ? addListener : removeListener;\n  action(self.scrollTarget, scrollEvent, self.refresh, passiveHandler);\n}\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target the target element\n   * @param {BSN.Options.ScrollSpy=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    // bind\n    const self = this;\n\n    // initialization element & options\n    const { element, options } = self;\n\n    // additional properties\n    /** @type {HTMLElement?} */\n    self.target = querySelector(options.target, getDocument(element));\n\n    // invalidate\n    if (!self.target) return;\n\n    // set initial state\n    /** @type {HTMLElement | Window} */\n    self.scrollTarget = element.clientHeight < element.scrollHeight\n      ? element : getWindow(element);\n    /** @type {number} */\n    self.scrollTop = 0;\n    /** @type {number} */\n    self.maxScroll = 0;\n    /** @type {number} */\n    self.scrollHeight = 0;\n    /** @type {HTMLElement?} */\n    self.activeItem = null;\n    /** @type {HTMLElement[]} */\n    self.items = [];\n    /** @type {number} */\n    self.itemsLength = 0;\n    /** @type {number[]} */\n    self.offsets = [];\n\n    // bind events\n    self.refresh = self.refresh.bind(self);\n\n    // add event handlers\n    toggleSpyHandlers(self, true);\n\n    self.refresh();\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return scrollspyComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return scrollspyDefaults; }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh() {\n    const self = this;\n    const { target } = self;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore next */\n    if (target.offsetHeight === 0) return;\n\n    updateSpyTargets(self);\n\n    const {\n      scrollTop, maxScroll, itemsLength, items, activeItem,\n    } = self;\n\n    if (scrollTop >= maxScroll) {\n      const newActiveItem = items[itemsLength - 1];\n\n      /* istanbul ignore else */\n      if (activeItem !== newActiveItem) {\n        activate(self, newActiveItem);\n      }\n      return;\n    }\n\n    const { offsets } = self;\n\n    if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n      self.activeItem = null;\n      clear(target);\n      return;\n    }\n\n    items.forEach((item, i) => {\n      if (activeItem !== item && scrollTop >= offsets[i]\n        && (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])) {\n        activate(self, item);\n      }\n    });\n  }\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    toggleSpyHandlers(this);\n    super.dispose();\n  }\n}\n\nObjectAssign(ScrollSpy, {\n  selector: scrollspySelector,\n  init: scrollspyInitCallback,\n  getInstance: getScrollSpyInstance,\n});\n", "/**\n * A global namespace for aria-selected.\n * @type {string}\n */\nconst ariaSelected = 'aria-selected';\nexport default ariaSelected;\n", "/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n", "/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n", "/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport ariaSelected from \"@thednp/shorty/src/strings/ariaSelected\";\nimport mouseclickEvent from \"@thednp/shorty/src/strings/mouseclickEvent\";\nimport setAttribute from \"@thednp/shorty/src/attr/setAttribute\";\nimport closest from \"@thednp/shorty/src/selectors/closest\";\nimport getElementsByClassName from \"@thednp/shorty/src/selectors/getElementsByClassName\";\nimport querySelector from \"@thednp/shorty/src/selectors/querySelector\";\nimport addClass from \"@thednp/shorty/src/class/addClass\";\nimport hasClass from \"@thednp/shorty/src/class/hasClass\";\nimport removeClass from \"@thednp/shorty/src/class/removeClass\";\nimport dispatchEvent from \"@thednp/shorty/src/misc/dispatchEvent\";\nimport emulateTransitionEnd from \"@thednp/shorty/src/misc/emulateTransitionEnd\";\nimport reflow from \"@thednp/shorty/src/misc/reflow\";\nimport ObjectAssign from \"@thednp/shorty/src/misc/ObjectAssign\";\nimport { getInstance } from \"@thednp/shorty/src/misc/data\";\nimport Timer from \"@thednp/shorty/src/misc/timer\";\nimport OriginalEvent from \"@thednp/shorty/src/misc/OriginalEvent\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener/src/event-listener\";\n\nimport collapsingClass from \"bootstrap.native/src/strings/collapsingClass\";\nimport activeClass from \"bootstrap.native/src/strings/activeClass\";\nimport fadeClass from \"bootstrap.native/src/strings/fadeClass\";\nimport showClass from \"bootstrap.native/src/strings/showClass\";\nimport dropdownClasses from \"bootstrap.native/src/strings/dropdownClasses\";\n// import dropdownMenuClass from \"bootstrap.native/src/strings/dropdownMenuClass\";\nimport dataBsToggle from \"bootstrap.native/src/strings/dataBsToggle\";\nimport tabString from \"bootstrap.native/src/strings/tabString\";\nimport tabComponent from \"bootstrap.native/src/strings/tabComponent\";\n\nimport getTargetElement from \"bootstrap.native/src/util/getTargetElement\";\nimport BaseComponent from \"bootstrap.native/src/components/base-component\";\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\nconst animateHeight = false;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Tab>}\n */\nconst getTabInstance = (element) => getInstance(element, tabComponent);\n\n/**\n * A `Tab` initialization callback.\n * @type {BSN.InitCallback<Tab>}\n */\nconst tabInitCallback = (element) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = OriginalEvent(`show.bs.${tabString}`);\nconst shownTabEvent = OriginalEvent(`shown.bs.${tabString}`);\nconst hideTabEvent = OriginalEvent(`hide.bs.${tabString}`);\nconst hiddenTabEvent = OriginalEvent(`hidden.bs.${tabString}`);\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n * @type {Map<HTMLElement, any>}\n */\nconst tabPrivate = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n * @param {Tab} self the `Tab` instance\n */\nfunction triggerTabEnd(self) {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = \"\";\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n}\n\n/**\n * Executes before showing the tab content.\n * @param {Tab} self the `Tab` instance\n */\nfunction triggerTabShow(self) {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = nav && tabPrivate.get(nav);\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(nextContent, fadeClass) && animateHeight) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element);\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab;\n  dispatchEvent(element, shownTabEvent);\n}\n\n/**\n * Executes before hiding the tab.\n * @param {Tab} self the `Tab` instance\n */\nfunction triggerTabHide(self) {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = nav && tabPrivate.get(nav);\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(nextContent, fadeClass) && animateHeight) {\n    [content, nextContent].forEach((c) => {\n      addClass(c, \"overflow-hidden\");\n    });\n    currentHeight = content.scrollHeight || /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n  if (showTabEvent.defaultPrevented) return;\n\n  addClass(nextContent, activeClass);\n  removeClass(content, activeClass);\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(nextContent, fadeClass) && animateHeight) {\n    const nextHeight = nextContent.scrollHeight;\n    tabPrivate.set(element, { currentHeight, nextHeight });\n\n    addClass(tabContent, collapsingClass);\n    tabContent.style.height = `${currentHeight}px`;\n    reflow(tabContent);\n    [content, nextContent].forEach((c) => {\n      removeClass(c, \"overflow-hidden\");\n    });\n  }\n\n  if (nextContent && hasClass(nextContent, fadeClass)) {\n    setTimeout(() => {\n      addClass(nextContent, showClass);\n      emulateTransitionEnd(nextContent, () => {\n        triggerTabShow(self);\n      });\n    }, 1);\n  } else {\n    addClass(nextContent, showClass);\n    triggerTabShow(self);\n  }\n\n  dispatchEvent(tab, hiddenTabEvent);\n}\n\n/**\n * Returns the current active tab and its target content.\n * @param {Tab} self the `Tab` instance\n * @returns {Record<string, any>} the query result\n */\nfunction getActiveTab(self) {\n  const { nav } = self;\n\n  const activeTabs = getElementsByClassName(activeClass, nav);\n  /** @type {(HTMLElement)=} */\n  let tab;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some((c) => hasClass(activeTabs[0].parentElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = tab ? getTargetElement(tab) : null;\n  return { tab, content };\n}\n\n/**\n * Returns a parent dropdown.\n * @param {HTMLElement} element the `Tab` element\n * @returns {HTMLElement?} the parent dropdown\n */\nfunction getParentDropdown(element) {\n  const dropdown = closest(element, `.${dropdownClasses.join(\",.\")}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n}\n\n/**\n * Toggles on/off the `click` event listener.\n * @param {Tab} self the `Tab` instance\n * @param {boolean=} add when `true`, event listener is added\n */\nfunction toggleTabHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, tabClickHandler);\n}\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Event` object\n */\nfunction tabClickHandler(e) {\n  const self = getTabInstance(this);\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n  e.preventDefault();\n\n  self.show();\n}\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target the target element\n   */\n  constructor(target) {\n    super(target);\n    // bind\n    const self = this;\n\n    // initialization element\n    const { element } = self;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    if (!content) return;\n\n    const nav = closest(element, \".nav\");\n    const container = closest(content, \".tab-content\");\n\n    /** @type {HTMLElement?} */\n    self.nav = nav;\n    /** @type {HTMLElement} */\n    self.content = content;\n    /** @type {HTMLElement?} */\n    self.tabContent = container;\n\n    // event targets\n    /** @type {HTMLElement?} */\n    self.dropdown = getParentDropdown(element);\n\n    // show first Tab instance of none is shown\n    // suggested on #432\n    const { tab } = getActiveTab(self);\n    if (nav && !tab) {\n      const firstTab = querySelector(tabSelector, nav);\n      const firstTabContent = firstTab && getTargetElement(firstTab);\n\n      /* istanbul ignore else */\n      if (firstTabContent) {\n        addClass(firstTab, activeClass);\n        addClass(firstTabContent, showClass);\n        addClass(firstTabContent, activeClass);\n        setAttribute(element, ariaSelected, \"true\");\n      }\n    }\n\n    // add event listener\n    toggleTabHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n  /* eslint-enable */\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const self = this;\n    const { element, content: nextContent, nav, dropdown } = self;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(self);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      dispatchEvent(tab, hideTabEvent);\n      if (hideTabEvent.defaultPrevented) return;\n\n      addClass(element, activeClass);\n      setAttribute(element, ariaSelected, \"true\");\n\n      const activeDropdown = getParentDropdown(tab);\n      if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n        removeClass(activeDropdown, activeClass);\n      }\n\n      /* istanbul ignore else */\n      if (nav) {\n        const toggleTab = () => {\n          removeClass(tab, activeClass);\n          setAttribute(tab, ariaSelected, \"false\");\n          if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n        };\n\n        if (hasClass(content, fadeClass) || hasClass(nextContent, fadeClass)) {\n          Timer.set(nav, toggleTab, 1);\n        } else toggleTab();\n      }\n\n      removeClass(content, showClass);\n      if (hasClass(content, fadeClass)) {\n        emulateTransitionEnd(content, () => triggerTabHide(self));\n      } else {\n        triggerTabHide(self);\n      }\n    }\n  }\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    toggleTabHandler(this);\n    super.dispose();\n  }\n}\n\nObjectAssign(Tab, {\n  selector: tabSelector,\n  init: tabInitCallback,\n  getInstance: getTabInstance,\n});\n", "/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n", "/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n", "/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport mouseclickEvent from '@thednp/shorty/src/strings/mouseclickEvent';\nimport mouseenterEvent from '@thednp/shorty/src/strings/mouseenterEvent';\nimport mouseleaveEvent from '@thednp/shorty/src/strings/mouseleaveEvent';\nimport focusinEvent from '@thednp/shorty/src/strings/focusinEvent';\nimport focusoutEvent from '@thednp/shorty/src/strings/focusoutEvent';\nimport addClass from '@thednp/shorty/src/class/addClass';\nimport hasClass from '@thednp/shorty/src/class/hasClass';\nimport removeClass from '@thednp/shorty/src/class/removeClass';\nimport closest from '@thednp/shorty/src/selectors/closest';\nimport querySelector from '@thednp/shorty/src/selectors/querySelector';\nimport querySelectorAll from '@thednp/shorty/src/selectors/querySelectorAll';\nimport dispatchEvent from '@thednp/shorty/src/misc/dispatchEvent';\nimport emulateTransitionEnd from '@thednp/shorty/src/misc/emulateTransitionEnd';\nimport ObjectAssign from '@thednp/shorty/src/misc/ObjectAssign';\nimport reflow from '@thednp/shorty/src/misc/reflow';\nimport { getInstance } from '@thednp/shorty/src/misc/data';\nimport Timer from '@thednp/shorty/src/misc/timer';\nimport OriginalEvent from '@thednp/shorty/src/misc/OriginalEvent';\nimport getDocument from '@thednp/shorty/src/get/getDocument';\n\nimport { addListener, removeListener } from '@thednp/event-listener/src/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\n\nimport BaseComponent from './base-component';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Toast>}\n */\nconst getToastInstance = (element) => getInstance(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n * @type {BSN.InitCallback<Toast>}\n */\nconst toastInitCallback = (element) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = OriginalEvent(`show.bs.${toastString}`);\nconst shownToastEvent = OriginalEvent(`shown.bs.${toastString}`);\nconst hideToastEvent = OriginalEvent(`hide.bs.${toastString}`);\nconst hiddenToastEvent = OriginalEvent(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n * @param {Toast} self the `Toast` instance\n */\nfunction showToastComplete(self) {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n}\n\n/**\n * Executes after the toast is hidden to the user.\n * @param {Toast} self the `Toast` instance\n */\nfunction hideToastComplete(self) {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n}\n\n/**\n * Executes before hiding the toast.\n * @param {Toast} self the `Toast` instance\n */\nfunction hideToast(self) {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n}\n\n/**\n * Executes before showing the toast.\n * @param {Toast} self the `Toast` instance\n */\nfunction showToast(self) {\n  const { element, options } = self;\n  Timer.set(element, () => {\n    removeClass(element, hideClass); // B/C\n    reflow(element);\n    addClass(element, showClass);\n    addClass(element, showingClass);\n\n    if (options.animation) {\n      emulateTransitionEnd(element, () => showToastComplete(self));\n    } else {\n      showToastComplete(self);\n    }\n  }, 17, showingClass);\n}\n\n/**\n * Toggles on/off the `click` event listener.\n * @param {Toast} self the `Toast` instance\n * @param {boolean=} add when `true`, it will add the listener\n */\nfunction toggleToastHandlers(self, add) {\n  const action = add ? addListener : removeListener;\n  const {\n    element, triggers, dismiss, options,\n  } = self;\n\n  /* istanbul ignore else */\n  if (dismiss) {\n    action(dismiss, mouseclickEvent, self.hide);\n  }\n\n  /* istanbul ignore else */\n  if (options.autohide) {\n    [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent]\n      .forEach((e) => action(element, e, interactiveToastHandler));\n  }\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach((btn) => action(btn, mouseclickEvent, toastClickHandler));\n  }\n}\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n * @param {Toast} self the `Toast` instance\n */\nfunction completeDisposeToast(self) {\n  Timer.clear(self.element, toastString);\n  toggleToastHandlers(self);\n}\n\n/**\n * Handles the `click` event listener for toast.\n * @param {MouseEvent} e the `Event` object\n */\nfunction toastClickHandler(e) {\n  const { target } = e;\n\n  const trigger = target && closest(target, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.show();\n}\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Toast` instance\n */\nfunction interactiveToastHandler(e) {\n  const element = this;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore next: a solid filter is required */\n  if (!self || (element === relatedTarget || element.contains(relatedTarget))) return;\n\n  if ([mouseenterEvent, focusinEvent].includes(type)) {\n    Timer.clear(element, toastString);\n  } else {\n    Timer.set(element, () => self.hide(), self.options.delay, toastString);\n  }\n}\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target the target `.toast` element\n   * @param {BSN.Options.Toast=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    // bind\n    const self = this;\n    const { element, options } = self;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    /** @type {HTMLElement?} */\n    self.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    /** @type {HTMLElement[]} */\n    self.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))]\n      .filter((btn) => getTargetElement(btn) === element);\n\n    // bind\n    self.show = self.show.bind(self);\n    self.hide = self.hide.bind(self);\n\n    // add event listener\n    toggleToastHandlers(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */  \n  get name() { return toastComponent; }\n  /**\n   * Returns component default options.\n   */  \n  get defaults() { return toastDefaults; }\n  /* eslint-enable */\n\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() { return hasClass(this.element, showClass); }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show() {\n    const self = this;\n    const { element, isShown } = self;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (showToastEvent.defaultPrevented) return;\n\n      showToast(self);\n    }\n  }\n\n  /** Hides the toast. */\n  hide() {\n    const self = this;\n    const { element, isShown } = self;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (hideToastEvent.defaultPrevented) return;\n      hideToast(self);\n    }\n  }\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const self = this;\n    const { element, isShown } = self;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(self);\n\n    super.dispose();\n  }\n}\n\nObjectAssign(Toast, {\n  selector: toastSelector,\n  init: toastInitCallback,\n  getInstance: getToastInstance,\n});\n", "import Data from \"@thednp/shorty/src/misc/data\";\nimport ObjectKeys from \"@thednp/shorty/src/misc/ObjectKeys\";\nimport getElementsByTagName from \"@thednp/shorty/src/selectors/getElementsByTagName\";\nimport matches from \"@thednp/shorty/src/selectors/matches\";\n\nimport { addListener } from \"@thednp/event-listener/src/event-listener\";\nimport Listener from \"@thednp/event-listener/src/event-listener\";\n\nimport Alert from \"bootstrap.native/src/components/alert-native\";\nimport Button from \"bootstrap.native/src/components/button-native\";\n// import Carousel from \"bootstrap.native/src/components/carousel-native\";\nimport Collapse from \"bootstrap.native/src/components/collapse-native\";\nimport Dropdown from \"bootstrap.native/src/components/dropdown-native\";\nimport Modal from \"bootstrap.native/src/components/modal-native\";\nimport Offcanvas from \"bootstrap.native/src/components/offcanvas-native\";\nimport Popover from \"bootstrap.native/src/components/popover-native\";\nimport ScrollSpy from \"bootstrap.native/src/components/scrollspy-native\";\n// import Tab from \"bootstrap.native/src/components/tab-native\";\nimport Tab from \"./custom-tab\";\nimport Toast from \"bootstrap.native/src/components/toast-native\";\nimport Tooltip from \"bootstrap.native/src/components/tooltip-native\";\n\nimport Version from \"bootstrap.native/src/version\";\n\n/** @type {Record<string, any>} */\nconst componentsList = {\n  Alert,\n  Button,\n  // Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n};\n\n// We initialize ourselves\nconst ignoreList = [\"Tooltip\"];\n\n/**\n * Initialize all matched `Element`s for one component.\n * @param {BSN.InitCallback<any>} callback\n * @param {NodeListOf<HTMLElement | Element> | (HTMLElement | Element)[]} collection\n */\nfunction initComponentDataAPI(callback, collection) {\n  [...collection].forEach((x) => callback(x));\n}\n\n/**\n * Remove one component from a target container element or all in the page.\n * @param {string} component the component name\n * @param {(Element | HTMLElement | Document)=} context parent `Element`\n */\nfunction removeComponentDataAPI(component, context) {\n  const compData = Data.getAllFor(component);\n\n  if (compData) {\n    [...compData].forEach((x) => {\n      const [element, instance] = x;\n      if (context && context.contains(element)) instance.dispose();\n    });\n  }\n}\n\n/**\n * Initialize all BSN components for a target container.\n * @param {ParentNode=} context parent `Node`\n */\nfunction initCallback(context) {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName(\"*\", lookUp)];\n\n  ObjectKeys(componentsList).forEach((comp) => {\n    if (ignoreList.includes(comp)) {\n      return;\n    }\n    const { init, selector } = componentsList[comp];\n    initComponentDataAPI(\n      init,\n      elemCollection.filter((item) => matches(item, selector))\n    );\n  });\n}\n\n/**\n * Remove all BSN components for a target container.\n * @param {ParentNode=} context parent `Node`\n */\nfunction removeDataAPI(context) {\n  const lookUp = context && context.nodeName ? context : document;\n\n  ObjectKeys(componentsList).forEach((comp) => {\n    removeComponentDataAPI(comp, lookUp);\n  });\n}\n\n// bulk initialize all components\nfunction init() {\n  if (document.body) initCallback();\n  else {\n    addListener(document, \"DOMContentLoaded\", () => initCallback(), {\n      once: true,\n    });\n  }\n}\n\nconst BSN = Object.assign(componentsList, {\n  initCallback,\n  init,\n  removeDataAPI,\n  Version,\n  Listener,\n});\n\n// We need this in the import otherwise other imports might get undefined global bootstrap\nwindow.bootstrap = BSN; // Alias for scripts sharing the same api as Bootstrap 5\nwindow.BSN = BSN;\n\nexport default BSN;\n", "const tabsSelector = \".nav\";\nconst navLinkSelector = \".nav-link\";\nconst dropdownItemClass = \"dropdown-item\";\nconst tabsDropdownClass = \"bs-tabs-dropdown\";\nconst activeClass = \"active\";\nconst showClass = \"show\";\nconst disabledClass = \"disabled\";\n\nconst resizeObserver = new ResizeObserver((entries) => {\n  for (const entry of entries) {\n    /**\n     * @type {BsTabs}\n     */\n    //@ts-ignore\n    const container = entry.target;\n    const tabs = container.tabs;\n    const offset = 30; // We need some space for the caret\n\n    // check inlineSize (width) and not blockSize (height)\n    const contentBoxSize = Array.isArray(entry.contentBoxSize) ? entry.contentBoxSize[0] : entry.contentBoxSize;\n    const size = parseInt(contentBoxSize.inlineSize) - offset;\n\n    const baseWidth = parseInt(tabs.dataset.baseWidth);\n    if (size < baseWidth) {\n      container.classList.add(tabsDropdownClass);\n    } else if (size >= baseWidth) {\n      container.classList.remove(tabsDropdownClass);\n      container.menu.style.display = \"none\";\n    }\n  }\n});\n\n/**\n * Improve bs tabs by making them collapsable and linkable\n */\nclass BsTabs extends HTMLElement {\n  constructor() {\n    // Always call super first in constructor\n    super();\n\n    this.lazySelector = \".lazy-loadable\";\n    this.lazyEvent = \"lazyload\";\n  }\n\n  /**\n   * This only works if the nav is visible on page load\n   */\n  setBaseWidth() {\n    let totalWidth = 0;\n    this.querySelectorAll(\"li\").forEach((tab) => {\n      tab.dataset.baseWidth = \"\" + tab.offsetWidth;\n      totalWidth += parseInt(tab.dataset.baseWidth);\n    });\n    this.tabs.dataset.baseWidth = \"\" + totalWidth;\n  }\n\n  createMobileMenu() {\n    this.menu = document.createElement(\"ul\");\n    this.menu.classList.add(\"dropdown-menu\");\n    this.querySelectorAll(\"li\").forEach((dropdownLink) => {\n      const link = dropdownLink.querySelector(\"a\") || dropdownLink.querySelector(\"button\");\n      const newChild = document.createElement(\"li\");\n      const newChildLink = document.createElement(\"a\");\n      const href = link.dataset.bsTarget || link.getAttribute(\"href\");\n\n      // Avoid menu to be crunched on small screens\n      // We apply this as a css var because it's only necessary with nav-tabs-dropdown\n      // link.style.setProperty(\"--min-width\", `${tab.dataset.baseWidth}px`);\n\n      newChild.append(newChildLink);\n      newChildLink.dataset.link = link.getAttribute(\"id\");\n      newChildLink.classList.add(...[dropdownItemClass, \"text-wrap\"]);\n      newChildLink.innerHTML = link.innerHTML.replace(/<br[^>]*>/, \" \"); // Replace any BR\n      newChildLink.setAttribute(\"href\", href);\n      if (link.classList.contains(disabledClass) || link.hasAttribute(disabledClass)) {\n        newChildLink.classList.add(disabledClass);\n      }\n      this.menu.append(newChild);\n    });\n    this.append(this.menu);\n  }\n\n  /**\n   * @link https://gomakethings.com/checking-event-target-selectors-with-event-bubbling-in-vanilla-javascript/\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#handling-events\n   */\n  handleEvent(event) {\n    const target = event.target;\n    if (event.type === \"show.bs.tab\") {\n      this.handleTabShow(target);\n    } else if (target.matches(navLinkSelector)) {\n      this.handleNavClick(target);\n    } else if (target.matches(\".\" + dropdownItemClass)) {\n      event.preventDefault();\n      this.handleDropdownClick(target);\n    }\n  }\n\n  handleDropdownClick(dropdownLink) {\n    console.log(dropdownLink.dataset.link);\n    const linkElement = document.getElementById(dropdownLink.dataset.link);\n    linkElement.dispatchEvent(new Event(\"click\", { bubbles: true }));\n    this.menu.style.display = \"none\";\n  }\n\n  handleNavClick(navLink) {\n    if (!navLink.classList.contains(activeClass)) {\n      return;\n    }\n    if (!this.classList.contains(tabsDropdownClass)) {\n      return;\n    }\n    // Hide current element\n    const hidden = this.menu.querySelector(\".\" + dropdownItemClass + \"[hidden]\");\n    if (hidden) {\n      hidden.removeAttribute(\"hidden\");\n    }\n    const href = navLink.dataset.bsTarget || navLink.getAttribute(\"href\");\n    const active = this.menu.querySelector(\"a[href='\" + href + \"']\");\n    if (active) {\n      active.setAttribute(\"hidden\", \"hidden\");\n    }\n\n    // Toggle menu\n    if (this.menu.style.display == \"block\") {\n      this.menu.style.display = \"none\";\n    } else {\n      this.menu.style.display = \"block\";\n      this.menu.style.top = navLink.parentElement.offsetHeight + \"px\";\n    }\n  }\n\n  makeResponsive() {\n    this.setBaseWidth();\n    this.createMobileMenu();\n  }\n\n  /**\n   * Persist hash in forms in case it gets submitted to allow proper redirection\n   */\n  persistHash() {\n    document.querySelectorAll(\"input[name=_hash]\").forEach(\n      /**\n       * @param {HTMLInputElement} input\n       */\n      (input) => {\n        input.value = document.location.hash;\n      }\n    );\n  }\n\n  /**\n   * Restore state based on location hash\n   * Support nested tab activation\n   */\n  restoreState() {\n    const hash = document.location.hash;\n    if (!hash) {\n      return;\n    }\n    // tabs can be nested, we need to activate each one of them\n    const parts = hash.split(\"__\").slice(0, -1);\n    parts.push(hash);\n    parts.forEach((part) => {\n      /**\n       * @type {HTMLElement}\n       */\n      const activeTab = this.querySelector(\"[data-bs-target='\" + part + \"']\");\n      if (activeTab) {\n        this.setActiveTab(activeTab);\n      }\n    });\n    this.persistHash();\n  }\n\n  /**\n   * @param {HTMLElement} tab the link item\n   */\n  setActiveTab(tab) {\n    tab.classList.add(activeClass);\n    const target = document.querySelector(tab.dataset.bsTarget);\n    if (target) {\n      target.classList.add(...[activeClass, showClass]);\n    }\n    // If bootstrap is already defined, make sure to show the proper tab\n    // Otherwise, bootstrap will pick up the active class\n    //@ts-ignore\n    if (typeof bootstrap !== \"undefined\") {\n      //@ts-ignore\n      const inst = bootstrap.Tab.getInstance(tab) || new bootstrap.Tab(tab);\n      inst.show();\n    }\n  }\n\n  removeActiveTab() {\n    this.querySelectorAll(navLinkSelector + \".\" + activeClass).forEach(\n      /**\n       * @param {HTMLElement} tab\n       */\n      (tab) => {\n        tab.classList.remove(activeClass);\n        const target = document.querySelector(tab.dataset.bsTarget);\n        if (target) {\n          target.classList.remove(...[activeClass, showClass]);\n        }\n      }\n    );\n  }\n\n  /**\n   * @returns {HTMLElement}\n   */\n  getActiveTab() {\n    return this.tabs.querySelector(\".\" + activeClass);\n  }\n\n  setDefaultTab() {\n    if (this.getActiveTab()) {\n      return;\n    }\n    // Get the first valid tab\n    /**\n     * @type {HTMLElement}\n     */\n    const activeTab = this.tabs.querySelector(navLinkSelector + \":not([\" + disabledClass + \"]):not(.\" + disabledClass + \")\");\n    if (!activeTab) {\n      return;\n    }\n    this.setActiveTab(activeTab);\n  }\n\n  /**\n   * @param {HTMLElement} tab the link item\n   */\n  triggerLazyElements(tab) {\n    if (!tab) {\n      return; // not visible\n    }\n    /**\n     * @type {HTMLElement}\n     */\n    const target = document.querySelector(tab.dataset.bsTarget);\n    if (!target) {\n      return; // no valid target\n    }\n    const lazySelector = target.dataset.lazySelector ?? this.lazySelector;\n    const lazyEvent = target.dataset.lazyEvent ?? this.lazyEvent;\n    target.querySelectorAll(lazySelector).forEach((el) => {\n      // make sure we are targeting the right tab\n      if (el.closest(\".tab-pane\") !== target) {\n        return;\n      }\n      el.dispatchEvent(new Event(lazyEvent, { bubbles: true }));\n    });\n    // Is there any nested tab ?\n    target.querySelectorAll(navLinkSelector + \".\" + activeClass).forEach(\n      /**\n       * @param {HTMLElement} nestedTab\n       */\n      (nestedTab) => {\n        this.triggerLazyElements(nestedTab);\n      }\n    );\n  }\n\n  /**\n   * This doesn't fire if the link is already marked as active\n   * @param {HTMLElement} target\n   */\n  handleTabShow(target) {\n    // Trigger lazy loading\n    this.triggerLazyElements(target);\n\n    // Track tabs clicks\n    if (this.hasAttribute(\"linkable\")) {\n      const hash = target.dataset.bsTarget;\n      if (hash) {\n        const url = new URL(window.location.href);\n        url.hash = hash;\n        window.history.pushState({}, \"\", url);\n        this.persistHash();\n      }\n    }\n  }\n\n  makeLinkable() {\n    this.removeActiveTab();\n    this.restoreState();\n    this.setDefaultTab();\n  }\n\n  connectedCallback() {\n    /**\n     * @type {HTMLElement}\n     */\n    this.tabs = this.querySelector(tabsSelector);\n\n    this.addEventListener(\"show.bs.tab\", this);\n    if (this.hasAttribute(\"linkable\")) {\n      this.makeLinkable();\n    }\n    if (this.hasAttribute(\"responsive\")) {\n      this.addEventListener(\"click\", this);\n      this.makeResponsive();\n      resizeObserver.observe(this);\n    }\n    this.style.visibility = \"visible\";\n    if (this.offsetWidth) {\n      this.triggerLazyElements(this.getActiveTab());\n    }\n  }\n\n  disconnectedCallback() {\n    this.removeEventListener(\"show.bs.tab\", this);\n    if (this.hasAttribute(\"responsive\")) {\n      this.removeEventListener(\"click\", this);\n      resizeObserver.unobserve(this);\n    }\n  }\n}\n\nexport default BsTabs;\n", "/**\n * Parse data attribute and return properly typed data\n * @param {string} val\n * @returns {*}\n */\nexport default function normalizeData(val) {\n  // Bool\n  if (val === \"true\") {\n    return true;\n  }\n  if (val === \"false\") {\n    return false;\n  }\n  // Null or empty\n  if (val === \"\" || val === \"null\") {\n    return null;\n  }\n  // Numeric attributes\n  if (val === Number(val).toString()) {\n    return Number(val);\n  }\n  // Only attempt json parsing for array or objects\n  if (val.indexOf(\"[\") === 0 || val.indexOf(\"{\") === 0) {\n    try {\n      // In case we have only single quoted values\n      if (!val.includes('\"')) {\n        val = val.split(\"'\").join('\"');\n      }\n      return JSON.parse(decodeURIComponent(val));\n    } catch {\n      console.log(\"Failed to parse \" + val);\n      return {};\n    }\n  }\n  return val;\n}\n", "import normalizeData from \"./utils/normalizeData.js\";\n\nconst resizeObserver = new ResizeObserver((entries) => {\n  for (const entry of entries) {\n    const el = entry.target;\n    //@ts-ignore\n    const tooltip = bootstrap.Tooltip.getInstance(el) || new bootstrap.Tooltip(el, el.parentElement.options);\n    const prop = normalizeData(getComputedStyle(el).getPropertyValue(\"--tooltip-enable\").trim());\n    if (prop) {\n      tooltip.enable();\n    } else {\n      tooltip.disable();\n    }\n  }\n});\n\n/**\n * Self initializing tooltip and popover\n */\nclass BsToggle extends HTMLElement {\n  constructor() {\n    // Always call super first in constructor\n    super();\n  }\n\n  connectedCallback() {\n    let options = { ...this.dataset };\n    // The js api expects properly typed data\n    for (var key in options) {\n      options[key] = normalizeData(options[key]);\n    }\n    const cls = options.toggle ? options.toggle[0].toUpperCase() + options.toggle.substring(1) : \"Tooltip\";\n    const el = this.firstElementChild;\n    if (!el.hasAttribute(\"title\") && !options.title) {\n      // BSN native doesn't support properly title attribute with enable/disable\n      el.setAttribute(\"title\", el.textContent.trim());\n    }\n    // Store options for later init\n    this.options = options;\n    //@ts-ignore\n    this.toggle = new bootstrap[cls](el, this.options);\n    if (this.hasAttribute(\"mobile\")) {\n      resizeObserver.observe(el);\n    }\n  }\n}\n\nexport default BsToggle;\n", "/**\n * @param {*} list\n * @returns {Array}\n */\nfunction sortByPriority(list) {\n  return Array.from(list).sort(function (a, b) {\n    a = a.dataset.priority || 0;\n    b = b.dataset.priority || -1; // Order by last col\n    return b - a;\n  });\n}\n\nconst resizeObserver = new ResizeObserver((entries) => {\n  for (const entry of entries) {\n    /**\n     * @type {ResponsiveTable}\n     */\n    //@ts-ignore\n    const container = entry.target;\n    const table = container.table;\n    // check inlineSize (width) and not blockSize (height)\n    const contentBoxSize = Array.isArray(entry.contentBoxSize) ? entry.contentBoxSize[0] : entry.contentBoxSize;\n    const size = parseInt(contentBoxSize.inlineSize);\n    const diff = table.offsetWidth - size;\n    let remaining = diff;\n\n    // The table is too big\n    if (table.offsetWidth > size) {\n      // Find columns with priority\n      let cols = container.cols.filter((col) => {\n        return !col.hasAttribute(\"hidden\") && col.hasAttribute(\"data-priority\");\n      });\n      // Or by position\n      if (cols.length === 0) {\n        cols = container.cols.filter((col) => {\n          return !col.hasAttribute(\"hidden\");\n        });\n        // Always keep one column\n        if (cols.length === 1) {\n          return;\n        }\n      }\n      cols.forEach((col) => {\n        if (remaining < 0) {\n          return;\n        }\n\n        const colWidth = col.offsetWidth;\n        const colIdx = col.ariaColIndex;\n\n        container.toggleColumn(colIdx, false);\n        container.toggleAltContent(colIdx, true);\n\n        remaining -= colWidth;\n      });\n    } else {\n      const minWidth = 50;\n      const visibleWidth =\n        container.cols\n          .filter((col) => {\n            return !col.hasAttribute(\"hidden\");\n          })\n          .reduce((result, col) => {\n            return result + parseInt(col.dataset.baseWidth);\n          }, 0) + minWidth; // Add an offset so that inserting column is smoother\n\n      // Do we have any hidden column that we can restore ?\n      container.cols\n        .filter((col) => {\n          return col.hasAttribute(\"hidden\");\n        })\n        .forEach((col) => {\n          const colWidth = parseInt(col.dataset.baseWidth);\n          const colIdx = col.ariaColIndex;\n\n          // We need to have enough space to restore it\n          if (size < colWidth + visibleWidth) {\n            return;\n          }\n\n          container.toggleColumn(colIdx, true);\n          container.toggleAltContent(colIdx, false);\n\n          remaining += colWidth;\n        });\n    }\n  }\n});\n\n/**\n * Automatically hide col as needed\n */\nclass ResponsiveTable extends HTMLElement {\n  constructor() {\n    // Always call super first in constructor\n    super();\n\n    this.style.display = \"block\"; // Otherwise resize doesn't happen\n    this.style.overflowX = \"hidden\"; // Prevent scrollbars from appearing\n\n    this.altSelector = this.getAttribute(\"alt-selector\") || \".responsive-table-alt\";\n  }\n\n  init() {\n    this.table = this.querySelector(\"table\");\n    this.holder = this.querySelector(\"thead\") || this.querySelector(\"tr\");\n    this.assignColIndex();\n    this.cols = this.holder.querySelectorAll(\"th\");\n    this.cols = sortByPriority(this.cols);\n\n    // Hide alt content\n    this.toggleAltContent(null, false);\n  }\n\n  connectedCallback() {\n    this.init();\n    resizeObserver.observe(this);\n  }\n\n  disconnectedCallback() {\n    resizeObserver.unobserve(this);\n  }\n\n  toggleColumn(idx, show) {\n    const targetCols = this.table.querySelectorAll(\"[aria-colindex='\" + idx + \"']\");\n    targetCols.forEach((targetCol) => {\n      if (show) {\n        targetCol.removeAttribute(\"hidden\");\n      } else {\n        targetCol.setAttribute(\"hidden\", \"\");\n      }\n    });\n  }\n\n  toggleAltContent(idx, show) {\n    const sel = idx ? this.altSelector + \"[data-index='\" + idx + \"']\" : this.altSelector;\n    const altNodes = this.table.querySelectorAll(sel);\n    altNodes.forEach((node) => {\n      if (show) {\n        node.removeAttribute(\"hidden\");\n      } else {\n        node.setAttribute(\"hidden\", \"\");\n      }\n    });\n  }\n\n  /**\n   * Ensure we have an index (starts at 1)\n   */\n  assignColIndex() {\n    this.table.dataset.baseWidth = \"\" + this.table.offsetWidth;\n    this.querySelectorAll(\"tr\").forEach((row) => {\n      let idx = 0;\n\n      row.querySelectorAll(\"th,td\").forEach(\n        /**\n         * @param {HTMLTableColElement} col\n         */\n        (col) => {\n          idx += col.hasAttribute(\"colspan\") ? parseInt(col.getAttribute(\"colspan\")) : 1;\n          if (!col.ariaColIndex) {\n            col.ariaColIndex = \"\" + idx;\n          }\n          col.dataset.baseWidth = \"\" + col.offsetWidth;\n        }\n      );\n    });\n  }\n}\n\nexport default ResponsiveTable;\n", "/**\n * @typedef ToasterOptions\n * @property {string} [body] Body content. Can also be filled with html tags (eg: Hello <b>World</b>)\n * @property {string} [header] (none) Header content. Can also be filled with html tags (eg : <h6 class=\"mb-0\">Success</h6>)\n * @property {string} [className] (none) Additional classes for toast element (eg: 'border-0 bg-danger text-white')\n * @property {boolean} [animation] (true) Apply transition to the toast\n * @property {boolean} [autohide] (true) Auto hide the toast\n * @property {number} [delay] (5000) Delay hiding the toast (ms)\n * @property {string} [id] (toast-{ts}) Specific id if required\n * @property {string} [gap] (1rem) Gap size\n * @property {string} [placement] (top-right) Corner position of toast. Available values: top-right, top-center, top-left, bottom-right, bottom-center, bottom-left\n * @property {boolean} [btnClose] (true) Show close button\n * @property {string} [buttonLabel] (Close Notification) Close button label\n * @property {string} [buttonClassName] (none) Additional classes for close button\n */\n\n/**\n * Create a toast object\n *\n * Stacking demo\n * @link https://codepen.io/lekoalabe/pen/poKMprj\n *\n * @param {ToasterOptions} attr\n * @returns {bootstrap.Toast}\n */\nexport default function toaster(attr) {\n  // Shortcut\n  if (typeof attr === \"string\") {\n    attr = {\n      body: attr,\n    };\n  }\n\n  /**\n   * @type {ToasterOptions}\n   */\n  const defaults = {\n    gap: \"1rem\", // this is 1.5rem in bs 5.2 and .75rem in 5.0/5.1\n    className: \"\",\n    placement: \"top-center\",\n    btnClose: true,\n    buttonLabel: \"Close Notification\",\n    buttonClassName: \"\",\n    animation: true,\n    autohide: true,\n    delay: 5000,\n  };\n  attr = Object.assign({}, defaults, attr);\n\n  const once = {\n    once: true,\n  };\n  const ucfirst = (string) => {\n    return string[0].toUpperCase() + string.substring(1);\n  };\n\n  // Container placement\n  // Split placement string into positional css elements\n  // posV: top or bottom\n  // posH: left, center or right\n  const [posV, posH] = attr.placement.split(\"-\");\n  // In the middle means 50%\n  const posUnit = posH == \"center\" ? \"50%\" : \"0\";\n  const animateFrom = \"margin\" + ucfirst(posV);\n  const positionFrom = \"margin\" + ucfirst(posV == \"top\" ? \"bottom\" : \"top\");\n  // We set posUnit to 50%, then position from left\n  const startPos = posH == \"center\" ? \"left\" : posH;\n\n  // Auto white close\n  if (attr.className.includes(\"text-white\") && !attr.buttonClassName) {\n    attr.buttonClassName = \"btn-close-white\";\n  }\n\n  // Create toast element\n  const btnClose = document.createElement(\"button\");\n  btnClose.className = `btn-close flex-shrink-0 ${attr.buttonClassName}`;\n  btnClose.ariaLabel = attr.buttonLabel;\n  btnClose.setAttribute(\"data-bs-dismiss\", \"toast\");\n\n  const toastBody = document.createElement(\"div\");\n  toastBody.className = `toast-body`;\n  toastBody.innerHTML = `<div class=\"d-flex w-100\"><div class=\"flex-grow-1\">${attr.body}</div></div></div>`;\n  if (!attr.header) {\n    toastBody.firstChild.appendChild(btnClose);\n  }\n\n  const toast = document.createElement(\"div\");\n  toast.id = attr.id || \"toast-\" + Date.now();\n  toast.className = `toast toaster border-0 bg-white`;\n  toast.role = \"alert\";\n  toast.ariaLive = \"assertive\";\n  toast.ariaAtomic = \"true\";\n  toast.style[positionFrom] = attr.gap;\n  if (attr.animation) {\n    toast.style[animateFrom] = \"-48px\";\n  }\n\n  // Wrap in a bg div (for opacity support)\n  const toastWrapper = document.createElement(\"div\");\n  toastWrapper.className = `${attr.className}`;\n  toastWrapper.style.borderRadius = `var(--bs-toast-border-radius)`;\n  toast.append(toastWrapper);\n\n  if (attr.header) {\n    const toastHeader = document.createElement(\"div\");\n    toastHeader.className = `toast-header`;\n    toastHeader.innerHTML = `<div class=\"d-flex align-items-center justify-content-between flex-grow-1\">${attr.header}</div></div>`;\n    toastHeader.firstChild.appendChild(btnClose);\n    toastWrapper.append(toastHeader);\n  }\n  toastWrapper.append(toastBody);\n\n  // Check if we have a container in place for the given placement or create one\n  /**\n   * @type {HTMLElement}\n   */\n  let toastContainer = document.querySelector(`.toast-container.${attr.placement}`);\n  if (!toastContainer) {\n    const styles = `${posV}:0;${startPos}:${posUnit};${posUnit === \"50%\" ? \"transform: translateX(-50%)\" : \"\"};z-index:1081;position:fixed;padding:${\n      attr.gap\n    };`;\n\n    toastContainer = document.createElement(\"div\");\n    toastContainer.className = `toast-container toaster-container ${attr.placement}`;\n    toastContainer.style.cssText = styles;\n\n    document.body.insertAdjacentElement(\"afterbegin\", toastContainer);\n  }\n\n  // Append to container and init\n  toastContainer.appendChild(toast);\n  //@ts-ignore\n  const inst = new bootstrap.Toast(toast, {\n    animation: attr.animation,\n    autohide: attr.autohide,\n    delay: attr.delay,\n  });\n\n  toast.addEventListener(\n    \"show.bs.toast\",\n    () => {\n      // Additional slide animation\n      if (attr.animation) {\n        setTimeout(() => {\n          const transition = parseFloat(getComputedStyle(toast).transitionDuration) * 1e3;\n          toast.style.transition = `all ${transition * 4}ms cubic-bezier(0.165, 0.840, 0.440, 1.000), opacity ${transition}ms linear`;\n          toast.style[animateFrom] = \"0px\";\n          toast.style.opacity = \"1\"; // This is required for BSN\n        }, 0);\n      }\n    },\n    once\n  );\n  toast.addEventListener(\n    \"hide.bs.toast\",\n    () => {\n      // Avoid any kind of extra click when animating and hiding\n      toast.style.pointerEvents = \"none\";\n\n      if (attr.animation) {\n        setTimeout(() => {\n          // Helps dealing with stacked toasts that jumps when hiding\n          const styles = window.getComputedStyle(toast);\n          const margin = parseFloat(styles[\"marginBottom\"]);\n          const height = Math.ceil(toast.offsetHeight + margin);\n          toast.style.transform = `scale(0)`;\n          toast.style.marginTop = `-${height}px`;\n          toast.style.opacity = \"0\"; // This is required for BSN\n        }, 0);\n      }\n    },\n    once\n  );\n\n  // Cleanup instead of just hiding\n  toast.addEventListener(\n    \"hidden.bs.toast\",\n    () => {\n      // prevent issues when double clicking\n      // @link https://github.com/twbs/bootstrap/issues/37265\n      setTimeout(() => {\n        inst.dispose();\n        toast.remove();\n      }, 1000);\n    },\n    once\n  );\n\n  inst.show();\n  return inst;\n}\n", "import toaster from \"./toaster.js\";\n\n/**\n * @typedef BaseToastsOptions\n * @property {string} [baseClassName]\n * @typedef {import(\"./toaster.js\").ToasterOptions & BaseToastsOptions} ToastsOptions\n */\n\n/**\n * @type {ToastsOptions}\n */\nconst defaultOptions = {\n  baseClassName: \"text-white\",\n};\n\n/**\n * Manage toast message using common styling and default options\n */\nclass Toasts {\n  static getOption(k) {\n    return defaultOptions[k] ?? null;\n  }\n\n  static setOption(k, v) {\n    defaultOptions[k] = v;\n  }\n\n  /**\n   * @link https://getbootstrap.com/docs/5.2/utilities/background/#background-gradient\n   */\n  static enableGradient() {\n    defaultOptions.baseClassName = \"bg-gradient text-white\";\n  }\n\n  static enableSoft() {\n    defaultOptions.baseClassName = \"text-dark bg-opacity-10\";\n  }\n\n  static enableDefault() {\n    defaultOptions.baseClassName = \"text-white\";\n  }\n\n  /**\n   * @param {string} msg\n   * @param {import(\"./toaster.js\").ToasterOptions} opts\n   */\n  static toast(msg, opts = {}) {\n    opts = Object.assign({}, defaultOptions, opts);\n    opts.body = msg;\n    opts.className = opts.className + \" \" + defaultOptions.baseClassName;\n    toaster(opts);\n  }\n\n  /**\n   * @param {string} msg\n   * @param {import(\"./toaster.js\").ToasterOptions} opts\n   */\n  static success(msg, opts = {}) {\n    this.toast(msg, {\n      ...{\n        className: \"bg-success\",\n      },\n      ...opts,\n    });\n  }\n\n  /**\n   * @param {string} msg\n   * @param {import(\"./toaster.js\").ToasterOptions} opts\n   */\n  static error(msg, opts = {}) {\n    this.toast(msg, {\n      ...{\n        className: \"bg-danger\",\n      },\n      ...opts,\n    });\n  }\n\n  /**\n   * @param {string} msg\n   * @param {import(\"./toaster.js\").ToasterOptions} opts\n   */\n  static warning(msg, opts = {}) {\n    this.toast(msg, {\n      ...{\n        className: \"bg-warning\",\n      },\n      ...opts,\n    });\n  }\n\n  /**\n   * @param {string} msg\n   * @param {import(\"./toaster.js\").ToasterOptions} opts\n   */\n  static info(msg, opts = {}) {\n    this.toast(msg, {\n      ...{\n        className: \"bg-info\",\n      },\n      ...opts,\n    });\n  }\n}\n\nexport default Toasts;\n", "const closeIcon =\n  '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"currentColor\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>';\nconst blockIcon =\n  '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"currentColor\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z\"/></svg>';\nconst checkIcon =\n  '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"currentColor\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/></svg>';\n\n/**\n * @typedef ModalizerOptions\n * @property {string} [body] Body content. Can also be filled with html tags (eg: Hello <b>World</b>)\n * @property {string} [title] (none) Title content. Can also be filled with html tags (eg : <h6 class=\"mb-0\">Success</h6>)\n * @property {string} [id] (modal-{ts}) Specific id if required\n * @property {boolean} [static] (false) Static backdrop\n * @property {boolean} [scrollable] (true) Scrollable modal\n * @property {boolean} [centered] (true) Centered modal\n * @property {boolean} [animated] (true) Animated modal\n * @property {boolean} [fullscreen] (false) Fullscreen modal\n * @property {boolean} [showClose] (true)\n * @property {boolean} [showConfirm] (false)\n * @property {boolean} [showCancel] (false)\n * @property {boolean} [showDeny] (false)\n * @property {string} [closeLabel] (Close)\n * @property {string} [confirmText] (v)\n * @property {string} [confirmClass] (success)\n * @property {string} [cancelText] (x)\n * @property {string} [cancelClass] (light)\n * @property {string} [denyText] (/)\n * @property {string} [denyClass] (danger)\n * @property {string} [size] (none) Size of the modal (sm|md|lg)\n * @property {boolean} [showIcon] (true)\n * @property {string} [icon] (alert)\n */\n\n/**\n * Create a modal object.\n *\n * @param {ModalizerOptions} attr\n * @returns {bootstrap.Modal}\n */\nexport default function modalizer(attr = {}) {\n  // Shortcut\n  if (typeof attr === \"string\") {\n    attr = {\n      body: attr,\n    };\n  }\n\n  /**\n   * @type {ModalizerOptions}\n   */\n  const defaults = {\n    id: \"modal-\" + Date.now(),\n    size: \"\",\n    static: false,\n    animated: true,\n    scrollable: true,\n    centered: true,\n    fullscreen: false,\n    showClose: true,\n    closeLabel: \"Close\",\n    showConfirm: false,\n    confirmText: checkIcon,\n    confirmClass: \"success\",\n    showCancel: false,\n    cancelText: closeIcon,\n    cancelClass: \"light\",\n    showDeny: false,\n    denyText: blockIcon,\n    denyClass: \"danger\",\n    showIcon: true,\n    icon: \"warning\",\n  };\n  attr = Object.assign({}, defaults, attr);\n\n  // Build template\n  let staticAttr = ` data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"`;\n  let template = document.createElement(\"template\");\n  template.innerHTML = `<div class=\"modal${attr.scrollable ? \" fade\" : \"\"}${attr.size ? \" modal-\" + attr.size : \"\"}\" id=\"${attr.id}\"${\n    attr.static ? staticAttr : \"\"\n  } tabindex=\"-1\" aria-hidden=\"true\">\n  <div class=\"modal-dialog${attr.scrollable ? \" modal-dialog-scrollable\" : \"\"}${attr.scrollable ? \" modal-dialog-centered \" : \"\"}${\n    attr.fullscreen ? \" modal-fullscreen\" : \"\"\n  }\">\n    <div class=\"modal-content text-center\" style=\"border:0\">\n     <button type=\"button\" class=\"btn-close position-absolute top-0 end-0 m-3\" data-bs-dismiss=\"modal\" aria-label=\"${attr.closeLabel}\"></button>\n      <div class=\"modal-icon-holder p-3 pt-4 pb-0\"><div class=\"modal-icon modal-${attr.icon}\"></div></div>\n      <div class=\"modal-title d-flex p-3 pt-4 pb-0 align-items-center justify-content-center\">\n        <h5 class=\"fs-2\">${attr.title}</h4>\n      </div>\n      <div class=\"modal-body\"><form>\n        ${attr.body}\n      </form></div>\n      <div class=\"modal-actions d-flex mt-2 justify-content-center\">\n        <div class=\"btn-group flex-fill\" style=\"min-height:44px\">\n          <button type=\"button\" data-event=\"cancel\" class=\"btn btn-${attr.cancelClass} rounded-0\">${attr.cancelText}</button>\n          <button type=\"button\" data-event=\"deny\" class=\"btn btn-${attr.denyClass} rounded-0\">${attr.denyText}</button>\n          <button type=\"button\" data-event=\"confirm\" class=\"btn btn-${attr.confirmClass} rounded-0\">${attr.confirmText}</button>\n        </div>\n      </div>\n    </div>\n    </div>\n  </div>\n</div>\n`;\n  /**\n   * @type {HTMLElement}\n   */\n  //@ts-ignore\n  const el = template.content.firstChild;\n  if (!attr.title) {\n    el.querySelector(\".modal-title\").remove();\n  }\n  if (!attr.showIcon) {\n    el.querySelector(\".modal-icon-holder\").remove();\n  }\n  if (!attr.showClose) {\n    el.querySelector(\".btn-close\").remove();\n  }\n  if (!attr.showCancel) {\n    el.querySelector('[data-event=\"cancel\"]').remove();\n  }\n  if (!attr.showDeny) {\n    el.querySelector('[data-event=\"deny\"]').remove();\n  }\n  if (!attr.showConfirm) {\n    el.querySelector('[data-event=\"confirm\"]').remove();\n  }\n  if (!attr.showCancel && !attr.showDeny && !attr.showConfirm) {\n    el.querySelector(\".modal-actions\").remove();\n  }\n  document.body.insertAdjacentElement(\"afterbegin\", el);\n  //@ts-ignore\n  let modal = new bootstrap.Modal(el);\n  // Cleanup instead of just hiding\n  el.addEventListener(\n    \"hidden.bs.modal\",\n    () => {\n      //@ts-ignore\n      el.querySelectorAll('[data-bs-toggle=\"tooltip\"]').forEach((n) => bootstrap.Tooltip.getInstance(n).dispose());\n      //@ts-ignore\n      el.querySelectorAll('[data-bs-toggle=\"popover\"]').forEach((n) => bootstrap.Popover.getInstance(n).dispose());\n      // prevent cleanup issue due to animation\n      setTimeout(() => {\n        modal.dispose();\n        el.remove();\n      }, 1000);\n    },\n    { once: true }\n  );\n\n  // Trigger hide\n  el.querySelectorAll(\".modal-actions button\").forEach(\n    /**\n     * @param {HTMLButtonElement} btn\n     */\n    (btn) => {\n      btn.addEventListener(\n        \"click\",\n        (ev) => {\n          modal.hide();\n          // Attach form data to the event\n          el.dispatchEvent(\n            new CustomEvent(\"modal.\" + btn.dataset.event, {\n              detail: new FormData(el.querySelector(\"form\")),\n              bubbles: true,\n            })\n          );\n        },\n        { once: true }\n      );\n    }\n  );\n\n  // BSN needs explicit init\n  //@ts-ignore\n  el.querySelectorAll('[data-bs-toggle=\"tooltip\"]').forEach((n) => bootstrap.Tooltip.getInstance(n) || new bootstrap.Tooltip(n));\n  //@ts-ignore\n  el.querySelectorAll('[data-bs-toggle=\"popover\"]').forEach((n) => bootstrap.Popover.getInstance(n) || new bootstrap.Popover(n));\n\n  modal.show();\n\n  // Show animation\n  if (attr.icon && attr.animated && attr.showIcon) {\n    el.addEventListener(\"shown.bs.modal\", () => el.querySelector(\".modal-icon\").classList.add(\"modal-icon-show\"), { once: true });\n  }\n\n  return modal;\n}\n", "import modalizer from \"./modalizer.js\";\n\n/**\n * @callback modalCallback\n * @param {Event} event\n */\n\n/**\n * A shorthand function to create a confirm dialog\n * @param {object} attr\n * @param {modalCallback} onResolve\n * @param {modalCallback} onReject\n * @returns {bootstrap.Modal}\n */\nexport default function modalizerConfirm(attr = {}, onResolve = null, onReject = null) {\n  if (typeof attr === \"string\") {\n    attr = {\n      body: attr,\n    };\n  }\n  attr = Object.assign(\n    {\n      static: true,\n      showClose: false,\n      showCancel: true,\n      showConfirm: true,\n    },\n    attr\n  );\n  const once = {\n    once: true,\n  };\n  const modal = modalizer(attr);\n  // Bootstrap 5 use _element and BSN use element\n  //@ts-ignore\n  const element = modal.element || modal._element;\n  if (onResolve) {\n    element.addEventListener(\"modal.confirm\", (ev) => onResolve(ev), once);\n  }\n  if (onReject) {\n    element.addEventListener(\"modal.cancel\", (ev) => onReject(ev), once);\n  }\n  return modal;\n}\n", "/**\n * @link https://getbootstrap.com/docs/5.2/forms/validation/\n */\nclass FormValidator {\n  /**\n   * @param {HTMLFormElement} form\n   */\n  constructor(form) {\n    if (!form.hasAttribute(\"novalidate\")) {\n      form.setAttribute(\"novalidate\", \"\");\n    }\n    form.addEventListener(\n      \"submit\",\n      (event) => {\n        // Remove errors in tabs and accordion\n        form.querySelectorAll(\".nav-tabs .nav-link.is-invalid\").forEach((link) => {\n          link.classList.remove(\"is-invalid\");\n        });\n        form.querySelectorAll(\".accordion-item.is-invalid\").forEach((accordionItem) => {\n          accordionItem.classList.remove(\"is-invalid\");\n        });\n\n        // Show all invalid fields\n        Array.from(form.elements).forEach(\n          /**\n           * @param {HTMLInputElement} el\n           */\n          (el) => {\n            if (!el.checkValidity()) {\n              // Mark all tabs and accordions as invalid as well\n              let parent = el.parentElement;\n              let accordion = null;\n              while (parent && !parent.classList.contains(\"tab-pane\")) {\n                if (parent.classList.contains(\"accordion-item\")) {\n                  accordion = parent;\n                }\n                parent = parent.parentElement;\n              }\n              if (parent && !parent.classList.contains(\"active\")) {\n                const link = form.querySelector(\"[data-bs-target='#\" + parent.getAttribute(\"id\") + \"']\");\n                if (link) {\n                  link.classList.add(\"is-invalid\");\n                }\n              }\n              if (accordion) {\n                accordion.classList.add(\"is-invalid\");\n              }\n            }\n          }\n        );\n\n        if (!form.checkValidity()) {\n          event.preventDefault();\n          event.stopPropagation();\n          // Show message\n          if (form.dataset.validationMessage) {\n            //@ts-ignore\n            window.toaster({\n              body: form.dataset.validationMessage,\n              className: \"border-0 bg-danger text-white\",\n            });\n          }\n        }\n\n        form.classList.add(\"was-validated\");\n      },\n      false\n    );\n  }\n  static init(selector = \".needs-validation\") {\n    document.querySelectorAll(selector).forEach(\n      /**\n       * @param {HTMLFormElement} form\n       */\n      (form) => {\n        new FormValidator(form);\n      }\n    );\n  }\n}\n\nexport default FormValidator;\n", "import BsTabs from \"./src/BsTabs.js\";\nimport BsToggle from \"./src/BsToggle.js\";\nimport ResponsiveTable from \"./src/ResponsiveTable.js\";\nimport toaster from \"./src/toaster.js\";\nimport Toasts from \"./src/Toasts.js\";\nimport modalizer from \"./src/modalizer.js\";\nimport modalizerConfirm from \"./src/modalizerConfirm.js\";\nimport FormValidator from \"./src/FormValidator.js\";\n\n// Register elements (you can potentially extend with your own classes or rename element)\ncustomElements.define(\"bs-tabs\", BsTabs);\ncustomElements.define(\"bs-toggle\", BsToggle);\ncustomElements.define(\"responsive-table\", ResponsiveTable);\n\n// Expose to global scope\nwindow.toaster = toaster;\nwindow.Toasts = Toasts;\nwindow.modalizer = modalizer;\nwindow.modalizerConfirm = modalizerConfirm;\nwindow.FormValidator = FormValidator;\n\nconst BsCompanion = {\n  BsTabs,\n  BsToggle,\n  ResponsiveTable,\n  toaster,\n  modalizer,\n  modalizerConfirm,\n  FormValidator,\n  Toasts,\n};\nexport default BsCompanion;\n", "\"use strict\";\r\n\r\n/**\r\n * Parse data attribute and return properly typed data\r\n * @param {string} val\r\n * @returns {mixed}\r\n */\r\nexport default function normalizeData(val) {\r\n  // Bool\r\n  if (val === \"true\") {\r\n    return true;\r\n  }\r\n  if (val === \"false\") {\r\n    return false;\r\n  }\r\n  // Null or empty\r\n  if (val === \"\" || val === \"null\") {\r\n    return null;\r\n  }\r\n  // Numeric attributes\r\n  if (val === Number(val).toString()) {\r\n    return Number(val);\r\n  }\r\n  // Only attempt json parsing for array or objects\r\n  if (val.indexOf(\"[\") === 0 || val.indexOf(\"{\") === 0) {\r\n    try {\r\n      // In case we have only single quoted values\r\n      if (val.indexOf('\"') === -1) {\r\n        val = val.replaceAll(\"'\", '\"');\r\n      }\r\n      return JSON.parse(decodeURIComponent(val));\r\n    } catch {\r\n      console.log(\"Failed to parse \" + val);\r\n      return {};\r\n    }\r\n  }\r\n  return val;\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * Find value in the global or namespaced scope\r\n * @param {string} name\r\n * @returns {Function|object|null}\r\n */\r\nexport default function globalValue(name) {\r\n  if (!name) {\r\n    return null;\r\n  }\r\n  if (name.includes(\".\")) {\r\n    const parts = name.split(\".\");\r\n    const ns = parts[0];\r\n    const func = parts[1];\r\n    const scope = window[ns];\r\n    if (!scope) {\r\n      return;\r\n    }\r\n    // Wrap jQuery in a constructor function\r\n    if ((ns === \"$\" || ns === \"jQuery\") && typeof window.jQuery.fn[func] !== \"undefined\") {\r\n      return (el, opts) => {\r\n        window.jQuery.fn[func].call(window.jQuery(el), opts);\r\n      };\r\n    }\r\n    return scope[func] || null;\r\n  }\r\n  return window[name] || null;\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * @link https://stackoverflow.com/questions/29093396/how-do-you-check-the-difference-between-an-ecmascript-6-class-and-function\r\n * @param {Function} fn\r\n * @returns {bool}\r\n */\r\nexport default function isConstructable(fn) {\r\n  try {\r\n    new new Proxy(fn, { construct: () => ({}) })();\r\n    return true;\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n}\r\n", "\"use strict\";\n\nimport normalizeData from \"./utils/normalizeData.js\";\nimport globalValue from \"./utils/globalValue.js\";\nimport isConstructable from \"./utils/isConstructable.js\";\n\nconst PREFIX = \"modular-behaviour\";\n/**\n * @var {number}\n */\nlet idx = 0;\n/**\n * @var {object}\n */\nlet watchList = {};\n/**\n * @var {number}\n */\nlet timeoutCounter = 0;\n/**\n * @var {number}\n */\nlet timeout = null;\n/**\n * @var {Function}\n */\nlet timer = () => {\n  const res = ModularBehaviour.scanWatchList();\n  if (res) {\n    // Everything is loaded, don't set timeout again\n    return;\n  }\n  if (timeoutCounter < 100) {\n    // 10 times at 10ms\n    timeoutCounter += 10;\n  } else {\n    // 20 times at 100ms\n    timeoutCounter += 100;\n  }\n\n  if (timeoutCounter < 2000) {\n    timeout = setTimeout(timer, timeoutCounter);\n  } else {\n    console.warn(`Unable to load ${ModularBehaviour.watching().join(\",\")}`);\n    watchList = {}; // reset list\n    timeout = null; // clear timeout id\n  }\n};\n/**\n * @var {IntersectionObserver}\n */\nlet observer = new window.IntersectionObserver((entries, observerRef) => {\n  entries.forEach(async (entry) => {\n    if (entry.isIntersecting) {\n      observerRef.unobserve(entry.target);\n      entry.target.onConnect();\n    }\n  });\n});\n\n// Extra check on top of the regular poll timer\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  ModularBehaviour.scanWatchList();\n});\n\n/**\n * Easily bind js behaviour to your html nodes\n */\nclass ModularBehaviour extends HTMLElement {\n  constructor() {\n    super();\n    idx++;\n  }\n\n  set name(value) {\n    this.setAttribute(\"name\", value);\n  }\n\n  get name() {\n    return this.getAttribute(\"name\");\n  }\n\n  set selector(value) {\n    this.setAttribute(\"selector\", value);\n  }\n\n  get selector() {\n    return this.getAttribute(\"selector\");\n  }\n\n  set func(value) {\n    this.setAttribute(\"func\", value);\n  }\n\n  get func() {\n    return this.getAttribute(\"func\");\n  }\n\n  set config(value) {\n    this.setAttribute(\"config\", value);\n  }\n\n  get config() {\n    return this.getAttribute(\"config\");\n  }\n\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n\n  get src() {\n    return this.getAttribute(\"src\");\n  }\n\n  set manual(value) {\n    if (value) {\n      this.setAttribute(\"manual\", \"\");\n    } else {\n      this.removeAttribute(\"manual\");\n    }\n  }\n\n  get manual() {\n    return this.hasAttribute(\"manual\");\n  }\n\n  set lazy(value) {\n    if (value) {\n      this.setAttribute(\"lazy\", \"\");\n    } else {\n      this.removeAttribute(\"lazy\");\n    }\n  }\n\n  get lazy() {\n    return this.hasAttribute(\"lazy\");\n  }\n\n  /**\n   * This allows loading arbitrary template into script\n   * @param {HTMLTemplateElement} el\n   */\n  loadConfigTemplate(el) {\n    const s = document.createElement(\"script\");\n    s.textContent = el.content.textContent;\n    this.appendChild(s);\n  }\n\n  /**\n   * Resolve config by checking the global or namespace scope and merge with data attributes\n   * @param {object} config\n   * @returns {object}\n   */\n  resolveConfig(config = {}) {\n    // Load config from js var\n    if (this.config) {\n      config = globalValue(this.config);\n      if (!config) {\n        console.warn(`${this.config} is not available`);\n        config = {};\n      }\n      if (typeof config === \"function\") {\n        config = config();\n      }\n    }\n    // Merge data attribute with properyl typed data\n    let options = { ...this.dataset };\n    for (var key in options) {\n      config[key] = normalizeData(options[key]);\n    }\n    return config;\n  }\n\n  /**\n   * Global watcher that can watch multiple functions until they are defined\n   * @param {string} name\n   * @param {Function} cb\n   */\n  static watch(name, cb) {\n    // Check for a provider script for a faster result than polling\n    const script = document.querySelector(`script[provides=\"${name}\"]`);\n    if (script) {\n      const prevOnload = script.onload;\n      script.onload = (e) => {\n        if (prevOnload) {\n          prevOnload(e);\n        }\n        const constructor = globalValue(name);\n        if (constructor) {\n          cb(constructor);\n        }\n      };\n      return;\n    }\n\n    // Or use poll logic for all callbacks under the same name\n    if (!watchList[name]) {\n      watchList[name] = [];\n    }\n    watchList[name].push(cb);\n    // Set a progressive timer for all, but always reset counter\n    timeoutCounter = 10;\n    if (!timeout) {\n      // This allows us to wait for delayed init due to async js loading, etc.\n      timer();\n    }\n  }\n\n  /**\n   * Scan watch list if global value is available\n   * @returns {bool} true when watch list is empty\n   */\n  static scanWatchList() {\n    for (var n in watchList) {\n      const constructor = globalValue(n);\n      if (constructor) {\n        // init all pending\n        for (var cb of watchList[n]) {\n          cb(constructor);\n        }\n        delete watchList[n];\n      }\n    }\n    // everything is cleared, return true and clear timeout if needed\n    if (!Object.keys(watchList).length) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Manually runs through all nodes\n   * @param {string} name\n   * @returns {bool}\n   */\n  static run(name) {\n    const constructor = globalValue(name);\n    if (!constructor) {\n      return false;\n    }\n    document.querySelectorAll(`modular-behaviour[name=\"${name}\"]`).forEach((el) => {\n      if (el.classList.contains(`${PREFIX}-initialized`)) {\n        return;\n      }\n      el.init(constructor);\n    });\n    return true;\n  }\n\n  /**\n   * @returns {array}\n   */\n  static watching() {\n    return Object.keys(watchList);\n  }\n\n  /**\n   * @param {Function} constructor\n   */\n  init(constructor) {\n    const configTemplate = this.querySelector(`template.${PREFIX}-config`);\n    let config = {};\n    if (configTemplate) {\n      // Without config, it's parsed as json\n      if (!this.config) {\n        config = JSON.parse(configTemplate.content.textContent);\n      } else {\n        this.loadConfigTemplate(configTemplate);\n      }\n    }\n    // Fetch first valid node or selector\n    const el = this.selector ? this.querySelector(this.selector) : this.firstElementChild;\n    if (!el) {\n      console.warn(\"No element\");\n      return;\n    }\n\n    // Set a default id\n    if (!el.hasAttribute(\"id\")) {\n      el.setAttribute(\"id\", `${PREFIX}-${idx}`);\n    }\n\n    // Override constructor\n    if (this.func) {\n      constructor = globalValue(this.func);\n      if (!constructor) {\n        console.warn(`${this.func} is not available`);\n        return;\n      }\n    }\n\n    // Instantiate class or function. ES6 Classes must use \"new\" keyword.\n    const isClass = isConstructable(constructor);\n    if (isClass) {\n      new constructor(el, this.resolveConfig(config));\n    } else {\n      const instance = Object.create(constructor.prototype || constructor);\n      constructor.apply(instance, [el, this.resolveConfig(config)]);\n    }\n\n    // Register init class\n    this.classList.remove(`${PREFIX}-pending`);\n    this.classList.add(`${PREFIX}-initialized`);\n  }\n\n  async onConnect() {\n    let constructor;\n    if (this.src) {\n      // Load constructor dynamically. It expects a default exported class.\n      constructor = (await import(this.src)).default;\n    } else {\n      // Look for the class or function to instantiate\n      constructor = globalValue(this.name);\n    }\n    if (!constructor) {\n      this.classList.add(`${PREFIX}-pending`);\n      // Need to call `run` manually\n      if (this.manual) {\n        return;\n      }\n      // Watch until defined\n      ModularBehaviour.watch(this.name, (constructor) => {\n        this.init(constructor);\n      });\n      return;\n    }\n    this.init(constructor);\n  }\n\n  connectedCallback() {\n    if (this.lazy) {\n      // observer will call onConnect when element is visible\n      observer.observe(this);\n      return;\n    }\n    this.onConnect();\n  }\n}\n\ncustomElements.define(\"modular-behaviour\", ModularBehaviour);\n\nexport default ModularBehaviour;\n", "/**\n * @param {Function} func \n * @param {Number} timeout \n * @returns {Function}\n */\nexport default function debounce(func, timeout = 300) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n}\n", "import Cookies from \"js-cookie\";\nimport debounce from \"./utils/debounce.js\";\n\nconst MOBILE_SIZE = 768;\nconst MINIMENU = \"minimenu\";\n\nclass AdminiUi {\n  constructor() {\n    this.sidebar = document.querySelector(\"#sidebar\");\n  }\n\n  /**\n   * The minimenu behaviour of the sidebar is controlled by a toggle\n   * We store the state in a cookie so that user preference is preserved\n   */\n  minimenu() {\n    // This should be done by the serverside to avoid layout shift on load\n    if (Cookies.get(MINIMENU) && !document.body.classList.contains(MINIMENU)) {\n      document.body.classList.add(MINIMENU);\n    }\n\n    document.querySelectorAll(\".js-sidebar-toggle\").forEach((el) => {\n      el.addEventListener(\"click\", (ev) => {\n        ev.preventDefault();\n\n        document.body.classList.toggle(MINIMENU);\n        if (document.body.classList.contains(MINIMENU)) {\n          Cookies.set(MINIMENU, 1);\n        } else {\n          Cookies.remove(MINIMENU);\n          const cta = document.querySelector(\".sidebar-cta-content\");\n          if (cta) {\n            cta.style.cssText = \"\";\n          }\n        }\n        document.activeElement.blur();\n      });\n    });\n  }\n\n  /**\n   * Enable all tooltips by default\n   * You can also use the bs-toggle custom attribute\n   */\n  tooltips() {\n    if (!bootstrap.Tooltip) {\n      return;\n    }\n    document.querySelectorAll('[data-bs-toggle=\"tooltip\"]').forEach((el) => {\n      if (!el.hasAttribute(\"title\")) {\n        el.setAttribute(\"title\", el.innerText.trim());\n      }\n      bootstrap.Tooltip.getInstance(el) || new bootstrap.Tooltip(el);\n    });\n  }\n\n  /**\n   * Sidebar layout is controlled with offcanvas but we may need to restore\n   * visibility if it was hidden\n   * @param {int} w\n   * @return {bootstrap.Offcanvas|null}\n   */\n  toggleSidebar(w = null) {\n    if (w === null) {\n      w = window.innerWidth;\n    }\n    if (w > MOBILE_SIZE) {\n      // A simple fix in case we resized the window and the menu was hidden by offcanvas\n      this.sidebar.style.visibility = \"visible\";\n      this.sidebar.classList.remove(\"offcanvas\");\n    }\n    // BSN does not init offcanvas like BS5\n    if (w <= MOBILE_SIZE) {\n      this.sidebar.classList.add(\"offcanvas\");\n      const sidebarOffcanvas = bootstrap.Offcanvas.getInstance(this.sidebar) || new bootstrap.Offcanvas(this.sidebar);\n      return sidebarOffcanvas;\n    }\n    return null;\n  }\n\n  /**\n   * Register js behaviour that augment response behaviour\n   */\n  responsive() {\n    window.addEventListener(\n      \"resize\",\n      debounce(() => {\n        this.toggleSidebar(window.innerWidth);\n        this.setMobileSize();\n      })\n    );\n  }\n\n  /**\n   * Dismissable alerts with an id will be stored in a cookie\n   * You might even skip rendering entirely by checking the cookies with the server\n   */\n  dismissableAlerts() {\n    document.querySelectorAll(\".alert-dismissible[id]\").forEach((el) => {\n      let dismissed = Cookies.get(\"dismissed_alerts\");\n      if (!dismissed) {\n        dismissed = [];\n      }\n      if (dismissed.includes(el.getAttribute(\"id\"))) {\n        el.style.display = \"none\";\n      }\n      el.addEventListener(\n        \"closed.bs.alert\",\n        () => {\n          dismissed.push(el.getAttribute(\"id\"));\n          Cookies.set(\"dismissed_alerts\", dismissed);\n        },\n        { once: true }\n      );\n    });\n  }\n\n  /**\n   * Create test from html. To create toast from js, use toaster\n   */\n  toasts() {\n    let list = document.querySelectorAll(\".toast\");\n    list.forEach((el) => {\n      let toast = new bootstrap.Toast(el);\n      toast.show();\n    });\n  }\n\n  /**\n   * @link https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n   */\n  setMobileSize() {\n    let vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n  }\n\n  /**\n   * For dropdowns not using the bs-toggle\n   */\n  simpleDropdowns() {\n    document.querySelectorAll(\".dropdown-toggle:not([data-bs-toggle])\").forEach((el) => {\n      const menu = el.parentElement.querySelector(\".dropdown-menu\");\n      el.addEventListener(\"click\", (e) => {\n        menu.classList.toggle(\"show\");\n        if (!menu.classList.contains(\"show\")) {\n          document.activeElement.blur();\n        }\n      });\n      el.addEventListener(\"blur\", (e) => {\n        menu.classList.remove(\"show\");\n      });\n    });\n  }\n\n  init() {\n    this.setMobileSize();\n    this.minimenu();\n    this.tooltips();\n    this.responsive();\n    this.dismissableAlerts();\n    this.toasts();\n    this.toggleSidebar();\n    this.simpleDropdowns();\n  }\n}\n\nexport default AdminiUi;\n", "/**\n * Properly escape the html\n * @param {string} str\n * @returns {string}\n */\nexport default function escapeHTML(str) {\n  const p = document.createElement(\"p\");\n  p.appendChild(document.createTextNode(str));\n  return p.innerHTML;\n}\n", "\"use strict\";\n\nimport Cookies from \"js-cookie\";\n// import \"./custom-bootstrap.js\";\nimport BSN from \"./custom-bsn.js\";\nimport \"bs-companion/bs-companion.js\";\nimport \"modular-behaviour.js\";\nimport AdminiUi from \"./ui.js\";\nimport escapeHTML from \"./utils/escape-html.js\";\n\nwindow.Cookies = Cookies;\n\nlet ui = new AdminiUi();\nlet init = () => {\n  if (typeof BSN !== \"undefined\") {\n    BSN.init();\n  }\n  window.admini.ui.init();\n};\n\nwindow.admini = window.admini || {};\nwindow.admini = Object.assign(window.admini, {\n  // Third party\n  escapeHTML,\n  // Our libs\n  ui,\n  init,\n});\n"],
  "mappings": "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",
  "names": []
}
